// This file was generated by liblab | https://liblab.com/

package com.example;

import com.asaas.apisdk.AsaasSdk;
import com.asaas.apisdk.config.ApiKeyAuthConfig;
import com.asaas.apisdk.config.AsaasSdkConfig;
import com.asaas.apisdk.exceptions.ApiError;
import com.asaas.apisdk.models.ListPaymentsParameters;
import com.asaas.apisdk.models.PaymentListRequestBillingType;
import com.asaas.apisdk.models.PaymentListRequestInvoiceStatus;
import com.asaas.apisdk.models.PaymentListRequestPaymentStatus;
import com.asaas.apisdk.models.PaymentListResponseDto;

public class Main {

  public static void main(String[] args) {
    AsaasSdkConfig config = AsaasSdkConfig.builder()
      .apiKeyAuthConfig(ApiKeyAuthConfig.builder().apiKey("YOUR_API_KEY").build())
      .build();

    AsaasSdk asaasSdk = new AsaasSdk(config);

    ListPaymentsParameters requestParameters = ListPaymentsParameters.builder()
      .installment("installment")
      .offset(8L)
      .limit(10L)
      .customer("customer")
      .customerGroupName("customerGroupName")
      .billingType(PaymentListRequestBillingType.UNDEFINED)
      .status(PaymentListRequestPaymentStatus.PENDING)
      .subscription("subscription")
      .externalReference("externalReference")
      .paymentDate("paymentDate")
      .invoiceStatus(PaymentListRequestInvoiceStatus.SCHEDULED)
      .estimatedCreditDate("estimatedCreditDate")
      .pixQrCodeId("pixQrCodeId")
      .anticipated(false)
      .anticipable(true)
      .dateCreatedGe("dateCreated[ge]")
      .dateCreatedLe("dateCreated[le]")
      .paymentDateGe("paymentDate[ge]")
      .paymentDateLe("paymentDate[le]")
      .estimatedCreditDateGe("estimatedCreditDate[ge]")
      .estimatedCreditDateLe("estimatedCreditDate[le]")
      .dueDateGe("dueDate[ge]")
      .dueDateLe("dueDate[le]")
      .user("user")
      .build();

    try {
      PaymentListResponseDto response = asaasSdk.payment.listPayments(requestParameters);

      System.out.println(response);
    } catch (ApiError e) {
      e.printStackTrace();
    }

    System.exit(0);
  }
}
