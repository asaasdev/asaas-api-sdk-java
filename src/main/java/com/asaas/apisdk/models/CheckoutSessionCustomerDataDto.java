// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * Customer data
 */
@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class CheckoutSessionCustomerDataDto {

  /**
   * Customer name
   */
  @JsonProperty("name")
  private JsonNullable<String> name;

  /**
   * Customer CPF or CNPJ
   */
  @JsonProperty("cpfCnpj")
  private JsonNullable<String> cpfCnpj;

  /**
   * Customer email
   */
  @JsonProperty("email")
  private JsonNullable<String> email;

  /**
   * Customer phone
   */
  @JsonProperty("phone")
  private JsonNullable<String> phone;

  /**
   * Customer address
   */
  @JsonProperty("address")
  private JsonNullable<String> address;

  /**
   * Address number
   */
  @JsonProperty("addressNumber")
  private JsonNullable<Long> addressNumber;

  /**
   * Address complement (max. 255 characters)
   */
  @JsonProperty("complement")
  private JsonNullable<String> complement;

  /**
   * Province of address
   */
  @JsonProperty("province")
  private JsonNullable<String> province;

  /**
   * Address zip code
   */
  @JsonProperty("postalCode")
  private JsonNullable<String> postalCode;

  /**
   * City code
   */
  @JsonProperty("city")
  private JsonNullable<Long> city;

  @JsonIgnore
  public String getName() {
    return name.orElse(null);
  }

  @JsonIgnore
  public String getCpfCnpj() {
    return cpfCnpj.orElse(null);
  }

  @JsonIgnore
  public String getEmail() {
    return email.orElse(null);
  }

  @JsonIgnore
  public String getPhone() {
    return phone.orElse(null);
  }

  @JsonIgnore
  public String getAddress() {
    return address.orElse(null);
  }

  @JsonIgnore
  public Long getAddressNumber() {
    return addressNumber.orElse(null);
  }

  @JsonIgnore
  public String getComplement() {
    return complement.orElse(null);
  }

  @JsonIgnore
  public String getProvince() {
    return province.orElse(null);
  }

  @JsonIgnore
  public String getPostalCode() {
    return postalCode.orElse(null);
  }

  @JsonIgnore
  public Long getCity() {
    return city.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class CheckoutSessionCustomerDataDtoBuilder {

    private JsonNullable<String> name = JsonNullable.undefined();

    @JsonProperty("name")
    public CheckoutSessionCustomerDataDtoBuilder name(String value) {
      this.name = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> cpfCnpj = JsonNullable.undefined();

    @JsonProperty("cpfCnpj")
    public CheckoutSessionCustomerDataDtoBuilder cpfCnpj(String value) {
      this.cpfCnpj = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> email = JsonNullable.undefined();

    @JsonProperty("email")
    public CheckoutSessionCustomerDataDtoBuilder email(String value) {
      this.email = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> phone = JsonNullable.undefined();

    @JsonProperty("phone")
    public CheckoutSessionCustomerDataDtoBuilder phone(String value) {
      this.phone = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> address = JsonNullable.undefined();

    @JsonProperty("address")
    public CheckoutSessionCustomerDataDtoBuilder address(String value) {
      this.address = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Long> addressNumber = JsonNullable.undefined();

    @JsonProperty("addressNumber")
    public CheckoutSessionCustomerDataDtoBuilder addressNumber(Long value) {
      this.addressNumber = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> complement = JsonNullable.undefined();

    @JsonProperty("complement")
    public CheckoutSessionCustomerDataDtoBuilder complement(String value) {
      this.complement = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> province = JsonNullable.undefined();

    @JsonProperty("province")
    public CheckoutSessionCustomerDataDtoBuilder province(String value) {
      this.province = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> postalCode = JsonNullable.undefined();

    @JsonProperty("postalCode")
    public CheckoutSessionCustomerDataDtoBuilder postalCode(String value) {
      this.postalCode = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Long> city = JsonNullable.undefined();

    @JsonProperty("city")
    public CheckoutSessionCustomerDataDtoBuilder city(Long value) {
      this.city = JsonNullable.of(value);
      return this;
    }
  }
}
