// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * Refunds information
 */
@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class PaymentRefundGetResponseDto {

  /**
   * Refund creation date
   */
  @JsonProperty("dateCreated")
  private JsonNullable<String> dateCreated;

  /**
   * Refund status
   */
  @JsonProperty("status")
  private JsonNullable<PaymentRefundGetResponsePaymentRefundStatus> status;

  /**
   * Refund value
   */
  @JsonProperty("value")
  private JsonNullable<Double> value;

  /**
   * (Pix only) Unique identifier of the Pix transaction at the Central Bank
   */
  @JsonProperty("endToEndIdentifier")
  private JsonNullable<String> endToEndIdentifier;

  /**
   * Description of the refund
   */
  @JsonProperty("description")
  private JsonNullable<String> description;

  /**
   * (Pix only) Refund effective date
   */
  @JsonProperty("effectiveDate")
  private JsonNullable<String> effectiveDate;

  /**
   * Transaction receipt link
   */
  @JsonProperty("transactionReceiptUrl")
  private JsonNullable<String> transactionReceiptUrl;

  /**
   * Refunded Splits, if any
   */
  @JsonProperty("refundedSplits")
  private JsonNullable<List<PaymentRefundedSplitResponseDto>> refundedSplits;

  @JsonIgnore
  public String getDateCreated() {
    return dateCreated.orElse(null);
  }

  @JsonIgnore
  public PaymentRefundGetResponsePaymentRefundStatus getStatus() {
    return status.orElse(null);
  }

  @JsonIgnore
  public Double getValue() {
    return value.orElse(null);
  }

  @JsonIgnore
  public String getEndToEndIdentifier() {
    return endToEndIdentifier.orElse(null);
  }

  @JsonIgnore
  public String getDescription() {
    return description.orElse(null);
  }

  @JsonIgnore
  public String getEffectiveDate() {
    return effectiveDate.orElse(null);
  }

  @JsonIgnore
  public String getTransactionReceiptUrl() {
    return transactionReceiptUrl.orElse(null);
  }

  @JsonIgnore
  public List<PaymentRefundedSplitResponseDto> getRefundedSplits() {
    return refundedSplits.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class PaymentRefundGetResponseDtoBuilder {

    private JsonNullable<String> dateCreated = JsonNullable.undefined();

    @JsonProperty("dateCreated")
    public PaymentRefundGetResponseDtoBuilder dateCreated(String value) {
      this.dateCreated = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PaymentRefundGetResponsePaymentRefundStatus> status = JsonNullable.undefined();

    @JsonProperty("status")
    public PaymentRefundGetResponseDtoBuilder status(PaymentRefundGetResponsePaymentRefundStatus value) {
      this.status = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> value = JsonNullable.undefined();

    @JsonProperty("value")
    public PaymentRefundGetResponseDtoBuilder value(Double value) {
      this.value = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> endToEndIdentifier = JsonNullable.undefined();

    @JsonProperty("endToEndIdentifier")
    public PaymentRefundGetResponseDtoBuilder endToEndIdentifier(String value) {
      this.endToEndIdentifier = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> description = JsonNullable.undefined();

    @JsonProperty("description")
    public PaymentRefundGetResponseDtoBuilder description(String value) {
      this.description = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> effectiveDate = JsonNullable.undefined();

    @JsonProperty("effectiveDate")
    public PaymentRefundGetResponseDtoBuilder effectiveDate(String value) {
      this.effectiveDate = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> transactionReceiptUrl = JsonNullable.undefined();

    @JsonProperty("transactionReceiptUrl")
    public PaymentRefundGetResponseDtoBuilder transactionReceiptUrl(String value) {
      this.transactionReceiptUrl = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<List<PaymentRefundedSplitResponseDto>> refundedSplits = JsonNullable.undefined();

    @JsonProperty("refundedSplits")
    public PaymentRefundGetResponseDtoBuilder refundedSplits(List<PaymentRefundedSplitResponseDto> value) {
      this.refundedSplits = JsonNullable.of(value);
      return this;
    }
  }
}
