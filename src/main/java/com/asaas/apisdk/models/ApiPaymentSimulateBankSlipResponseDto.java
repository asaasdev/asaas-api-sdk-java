// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiPaymentSimulateBankSlipResponseDto {

  /**
   * Net value
   */
  @JsonProperty("netValue")
  private JsonNullable<Double> netValue;

  /**
   * Fee value
   */
  @JsonProperty("feeValue")
  private JsonNullable<Double> feeValue;

  @JsonProperty("installment")
  private JsonNullable<ApiPaymentSimulateInstallmentResponseDto> installment;

  @JsonIgnore
  public Double getNetValue() {
    return netValue.orElse(null);
  }

  @JsonIgnore
  public Double getFeeValue() {
    return feeValue.orElse(null);
  }

  @JsonIgnore
  public ApiPaymentSimulateInstallmentResponseDto getInstallment() {
    return installment.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiPaymentSimulateBankSlipResponseDtoBuilder {

    private JsonNullable<Double> netValue = JsonNullable.undefined();

    @JsonProperty("netValue")
    public ApiPaymentSimulateBankSlipResponseDtoBuilder netValue(Double value) {
      if (value == null) {
        throw new IllegalStateException("netValue cannot be null");
      }
      this.netValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> feeValue = JsonNullable.undefined();

    @JsonProperty("feeValue")
    public ApiPaymentSimulateBankSlipResponseDtoBuilder feeValue(Double value) {
      if (value == null) {
        throw new IllegalStateException("feeValue cannot be null");
      }
      this.feeValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiPaymentSimulateInstallmentResponseDto> installment = JsonNullable.undefined();

    @JsonProperty("installment")
    public ApiPaymentSimulateBankSlipResponseDtoBuilder installment(ApiPaymentSimulateInstallmentResponseDto value) {
      if (value == null) {
        throw new IllegalStateException("installment cannot be null");
      }
      this.installment = JsonNullable.of(value);
      return this;
    }
  }
}
