// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiBillSimulateRequestDto {

  /**
   * Digitizable bill line
   */
  @JsonProperty("identificationField")
  private JsonNullable<String> identificationField;

  /**
   * Ticket barcode
   */
  @JsonProperty("barCode")
  private JsonNullable<String> barCode;

  @JsonIgnore
  public String getIdentificationField() {
    return identificationField.orElse(null);
  }

  @JsonIgnore
  public String getBarCode() {
    return barCode.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiBillSimulateRequestDtoBuilder {

    private JsonNullable<String> identificationField = JsonNullable.undefined();

    @JsonProperty("identificationField")
    public ApiBillSimulateRequestDtoBuilder identificationField(String value) {
      if (value == null) {
        throw new IllegalStateException("identificationField cannot be null");
      }
      this.identificationField = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> barCode = JsonNullable.undefined();

    @JsonProperty("barCode")
    public ApiBillSimulateRequestDtoBuilder barCode(String value) {
      if (value == null) {
        throw new IllegalStateException("barCode cannot be null");
      }
      this.barCode = JsonNullable.of(value);
      return this;
    }
  }
}
