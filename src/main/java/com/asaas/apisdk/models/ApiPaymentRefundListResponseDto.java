// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiPaymentRefundListResponseDto {

  /**
   * Object type
   */
  @JsonProperty("object")
  private JsonNullable<String> object;

  /**
   * Indicates whether there is another page to be searched
   */
  @JsonProperty("hasMore")
  private JsonNullable<Boolean> hasMore;

  /**
   * Total number of items for the filters entered
   */
  @JsonProperty("totalCount")
  private JsonNullable<Long> totalCount;

  /**
   * Number of objects per page
   */
  @JsonProperty("limit")
  private JsonNullable<Long> limit;

  /**
   * Position of the object from which the page should be loaded
   */
  @JsonProperty("offset")
  private JsonNullable<Long> offset;

  /**
   * List of objects
   */
  @JsonProperty("data")
  private JsonNullable<List<ApiPaymentRefundGetResponseDto>> data;

  @JsonIgnore
  public String getObject() {
    return object.orElse(null);
  }

  @JsonIgnore
  public Boolean getHasMore() {
    return hasMore.orElse(null);
  }

  @JsonIgnore
  public Long getTotalCount() {
    return totalCount.orElse(null);
  }

  @JsonIgnore
  public Long getLimit() {
    return limit.orElse(null);
  }

  @JsonIgnore
  public Long getOffset() {
    return offset.orElse(null);
  }

  @JsonIgnore
  public List<ApiPaymentRefundGetResponseDto> getData() {
    return data.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiPaymentRefundListResponseDtoBuilder {

    private JsonNullable<String> object = JsonNullable.undefined();

    @JsonProperty("object")
    public ApiPaymentRefundListResponseDtoBuilder object(String value) {
      this.object = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Boolean> hasMore = JsonNullable.undefined();

    @JsonProperty("hasMore")
    public ApiPaymentRefundListResponseDtoBuilder hasMore(Boolean value) {
      this.hasMore = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Long> totalCount = JsonNullable.undefined();

    @JsonProperty("totalCount")
    public ApiPaymentRefundListResponseDtoBuilder totalCount(Long value) {
      this.totalCount = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Long> limit = JsonNullable.undefined();

    @JsonProperty("limit")
    public ApiPaymentRefundListResponseDtoBuilder limit(Long value) {
      this.limit = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Long> offset = JsonNullable.undefined();

    @JsonProperty("offset")
    public ApiPaymentRefundListResponseDtoBuilder offset(Long value) {
      this.offset = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<List<ApiPaymentRefundGetResponseDto>> data = JsonNullable.undefined();

    @JsonProperty("data")
    public ApiPaymentRefundListResponseDtoBuilder data(List<ApiPaymentRefundGetResponseDto> value) {
      this.data = JsonNullable.of(value);
      return this;
    }
  }
}
