// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class MyAccountGetAccountFeesResponseDto {

  /**
   * Billing fees
   */
  @JsonProperty("payment")
  private JsonNullable<MyAccountGetAccountFeesPaymentDto> payment;

  /**
   * Transfer fees
   */
  @JsonProperty("transfer")
  private JsonNullable<MyAccountGetAccountFeesTransferDto> transfer;

  /**
   * Notification fees
   */
  @JsonProperty("notification")
  private JsonNullable<MyAccountGetAccountFeesNotificationDto> notification;

  /**
   * Serasa consultation fees
   */
  @JsonProperty("creditBureauReport")
  private JsonNullable<MyAccountGetAccountFeesCreditBureauReportDto> creditBureauReport;

  /**
   * Invoice fees
   */
  @JsonProperty("invoice")
  private JsonNullable<MyAccountGetAccountFeesInvoiceDto> invoice;

  /**
   * Anticipation fees
   */
  @JsonProperty("anticipation")
  private JsonNullable<MyAccountGetAccountFeesAnticipationDto> anticipation;

  @JsonIgnore
  public MyAccountGetAccountFeesPaymentDto getPayment() {
    return payment.orElse(null);
  }

  @JsonIgnore
  public MyAccountGetAccountFeesTransferDto getTransfer() {
    return transfer.orElse(null);
  }

  @JsonIgnore
  public MyAccountGetAccountFeesNotificationDto getNotification() {
    return notification.orElse(null);
  }

  @JsonIgnore
  public MyAccountGetAccountFeesCreditBureauReportDto getCreditBureauReport() {
    return creditBureauReport.orElse(null);
  }

  @JsonIgnore
  public MyAccountGetAccountFeesInvoiceDto getInvoice() {
    return invoice.orElse(null);
  }

  @JsonIgnore
  public MyAccountGetAccountFeesAnticipationDto getAnticipation() {
    return anticipation.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class MyAccountGetAccountFeesResponseDtoBuilder {

    private JsonNullable<MyAccountGetAccountFeesPaymentDto> payment = JsonNullable.undefined();

    @JsonProperty("payment")
    public MyAccountGetAccountFeesResponseDtoBuilder payment(MyAccountGetAccountFeesPaymentDto value) {
      this.payment = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<MyAccountGetAccountFeesTransferDto> transfer = JsonNullable.undefined();

    @JsonProperty("transfer")
    public MyAccountGetAccountFeesResponseDtoBuilder transfer(MyAccountGetAccountFeesTransferDto value) {
      this.transfer = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<MyAccountGetAccountFeesNotificationDto> notification = JsonNullable.undefined();

    @JsonProperty("notification")
    public MyAccountGetAccountFeesResponseDtoBuilder notification(MyAccountGetAccountFeesNotificationDto value) {
      this.notification = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<MyAccountGetAccountFeesCreditBureauReportDto> creditBureauReport = JsonNullable.undefined();

    @JsonProperty("creditBureauReport")
    public MyAccountGetAccountFeesResponseDtoBuilder creditBureauReport(
      MyAccountGetAccountFeesCreditBureauReportDto value
    ) {
      this.creditBureauReport = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<MyAccountGetAccountFeesInvoiceDto> invoice = JsonNullable.undefined();

    @JsonProperty("invoice")
    public MyAccountGetAccountFeesResponseDtoBuilder invoice(MyAccountGetAccountFeesInvoiceDto value) {
      this.invoice = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<MyAccountGetAccountFeesAnticipationDto> anticipation = JsonNullable.undefined();

    @JsonProperty("anticipation")
    public MyAccountGetAccountFeesResponseDtoBuilder anticipation(MyAccountGetAccountFeesAnticipationDto value) {
      this.anticipation = JsonNullable.of(value);
      return this;
    }
  }
}
