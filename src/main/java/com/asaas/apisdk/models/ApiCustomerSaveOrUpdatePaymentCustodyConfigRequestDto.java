// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiCustomerSaveOrUpdatePaymentCustodyConfigRequestDto {

  /**
   * Number of days to expire the payment escrow
   */
  @NonNull
  private Long daysToExpire;

  /**
   * Indicates whether the Escrow Account is enabled
   */
  @JsonProperty("enabled")
  private JsonNullable<Boolean> enabled;

  /**
   * Indicates whether the subaccount is responsible for paying the Escrow Account fee. If not informed, the main account will be responsible for the fee
   */
  @JsonProperty("isFeePayer")
  private JsonNullable<Boolean> isFeePayer;

  @JsonIgnore
  public Boolean getEnabled() {
    return enabled.orElse(null);
  }

  @JsonIgnore
  public Boolean getIsFeePayer() {
    return isFeePayer.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiCustomerSaveOrUpdatePaymentCustodyConfigRequestDtoBuilder {

    private JsonNullable<Boolean> enabled = JsonNullable.undefined();

    @JsonProperty("enabled")
    public ApiCustomerSaveOrUpdatePaymentCustodyConfigRequestDtoBuilder enabled(Boolean value) {
      if (value == null) {
        throw new IllegalStateException("enabled cannot be null");
      }
      this.enabled = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Boolean> isFeePayer = JsonNullable.undefined();

    @JsonProperty("isFeePayer")
    public ApiCustomerSaveOrUpdatePaymentCustodyConfigRequestDtoBuilder isFeePayer(Boolean value) {
      if (value == null) {
        throw new IllegalStateException("isFeePayer cannot be null");
      }
      this.isFeePayer = JsonNullable.of(value);
      return this;
    }
  }
}
