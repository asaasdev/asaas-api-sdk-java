// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiMyAccountGetAccountFeesCreditBureauReportDto {

  /**
   * Fee for Serasa consultation for natural person
   */
  @JsonProperty("naturalPersonFeeValue")
  private JsonNullable<Double> naturalPersonFeeValue;

  /**
   * Fee for Serasa consultation for legal person
   */
  @JsonProperty("legalPersonFeeValue")
  private JsonNullable<Double> legalPersonFeeValue;

  @JsonIgnore
  public Double getNaturalPersonFeeValue() {
    return naturalPersonFeeValue.orElse(null);
  }

  @JsonIgnore
  public Double getLegalPersonFeeValue() {
    return legalPersonFeeValue.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiMyAccountGetAccountFeesCreditBureauReportDtoBuilder {

    private JsonNullable<Double> naturalPersonFeeValue = JsonNullable.undefined();

    @JsonProperty("naturalPersonFeeValue")
    public ApiMyAccountGetAccountFeesCreditBureauReportDtoBuilder naturalPersonFeeValue(Double value) {
      if (value == null) {
        throw new IllegalStateException("naturalPersonFeeValue cannot be null");
      }
      this.naturalPersonFeeValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> legalPersonFeeValue = JsonNullable.undefined();

    @JsonProperty("legalPersonFeeValue")
    public ApiMyAccountGetAccountFeesCreditBureauReportDtoBuilder legalPersonFeeValue(Double value) {
      if (value == null) {
        throw new IllegalStateException("legalPersonFeeValue cannot be null");
      }
      this.legalPersonFeeValue = JsonNullable.of(value);
      return this;
    }
  }
}
