// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiMyAccountGetAccountFeesPaymentCreditCardDto {

  /**
   * Operating fee per charge
   */
  @JsonProperty("operationValue")
  private JsonNullable<Double> operationValue;

  /**
   * Spot percentage rate
   */
  @JsonProperty("oneInstallmentPercentage")
  private JsonNullable<Double> oneInstallmentPercentage;

  /**
   * Percentage rate for 2 to 6 installments
   */
  @JsonProperty("upToSixInstallmentsPercentage")
  private JsonNullable<Double> upToSixInstallmentsPercentage;

  /**
   * Percentage rate for 7 to 12 installments
   */
  @JsonProperty("upToTwelveInstallmentsPercentage")
  private JsonNullable<Double> upToTwelveInstallmentsPercentage;

  /**
   * Percentage rate for 13 to 21 installments
   */
  @JsonProperty("upToTwentyOneInstallmentsPercentage")
  private JsonNullable<Double> upToTwentyOneInstallmentsPercentage;

  /**
   * Promotional cash percentage rate (If any)
   */
  @JsonProperty("discountOneInstallmentPercentage")
  private JsonNullable<Double> discountOneInstallmentPercentage;

  /**
   * Percentage rate for 2 to 6 promotional installments (If any)
   */
  @JsonProperty("discountUpToSixInstallmentsPercentage")
  private JsonNullable<Double> discountUpToSixInstallmentsPercentage;

  /**
   * Percentage rate for 7 to 12 promotional installments (If any)
   */
  @JsonProperty("discountUpToTwelveInstallmentsPercentage")
  private JsonNullable<Double> discountUpToTwelveInstallmentsPercentage;

  /**
   * Percentage rate for 13 to 21 promotional installments (if any)
   */
  @JsonProperty("discountUpToTwentyOneInstallmentsPercentage")
  private JsonNullable<Double> discountUpToTwentyOneInstallmentsPercentage;

  /**
   * Promotional fee expiration date (If any)
   */
  @JsonProperty("discountExpiration")
  private JsonNullable<String> discountExpiration;

  /**
   * Days to receive billing
   */
  @JsonProperty("daysToReceive")
  private JsonNullable<Long> daysToReceive;

  @JsonIgnore
  public Double getOperationValue() {
    return operationValue.orElse(null);
  }

  @JsonIgnore
  public Double getOneInstallmentPercentage() {
    return oneInstallmentPercentage.orElse(null);
  }

  @JsonIgnore
  public Double getUpToSixInstallmentsPercentage() {
    return upToSixInstallmentsPercentage.orElse(null);
  }

  @JsonIgnore
  public Double getUpToTwelveInstallmentsPercentage() {
    return upToTwelveInstallmentsPercentage.orElse(null);
  }

  @JsonIgnore
  public Double getUpToTwentyOneInstallmentsPercentage() {
    return upToTwentyOneInstallmentsPercentage.orElse(null);
  }

  @JsonIgnore
  public Double getDiscountOneInstallmentPercentage() {
    return discountOneInstallmentPercentage.orElse(null);
  }

  @JsonIgnore
  public Double getDiscountUpToSixInstallmentsPercentage() {
    return discountUpToSixInstallmentsPercentage.orElse(null);
  }

  @JsonIgnore
  public Double getDiscountUpToTwelveInstallmentsPercentage() {
    return discountUpToTwelveInstallmentsPercentage.orElse(null);
  }

  @JsonIgnore
  public Double getDiscountUpToTwentyOneInstallmentsPercentage() {
    return discountUpToTwentyOneInstallmentsPercentage.orElse(null);
  }

  @JsonIgnore
  public String getDiscountExpiration() {
    return discountExpiration.orElse(null);
  }

  @JsonIgnore
  public Long getDaysToReceive() {
    return daysToReceive.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiMyAccountGetAccountFeesPaymentCreditCardDtoBuilder {

    private JsonNullable<Double> operationValue = JsonNullable.undefined();

    @JsonProperty("operationValue")
    public ApiMyAccountGetAccountFeesPaymentCreditCardDtoBuilder operationValue(Double value) {
      if (value == null) {
        throw new IllegalStateException("operationValue cannot be null");
      }
      this.operationValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> oneInstallmentPercentage = JsonNullable.undefined();

    @JsonProperty("oneInstallmentPercentage")
    public ApiMyAccountGetAccountFeesPaymentCreditCardDtoBuilder oneInstallmentPercentage(Double value) {
      if (value == null) {
        throw new IllegalStateException("oneInstallmentPercentage cannot be null");
      }
      this.oneInstallmentPercentage = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> upToSixInstallmentsPercentage = JsonNullable.undefined();

    @JsonProperty("upToSixInstallmentsPercentage")
    public ApiMyAccountGetAccountFeesPaymentCreditCardDtoBuilder upToSixInstallmentsPercentage(Double value) {
      if (value == null) {
        throw new IllegalStateException("upToSixInstallmentsPercentage cannot be null");
      }
      this.upToSixInstallmentsPercentage = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> upToTwelveInstallmentsPercentage = JsonNullable.undefined();

    @JsonProperty("upToTwelveInstallmentsPercentage")
    public ApiMyAccountGetAccountFeesPaymentCreditCardDtoBuilder upToTwelveInstallmentsPercentage(Double value) {
      if (value == null) {
        throw new IllegalStateException("upToTwelveInstallmentsPercentage cannot be null");
      }
      this.upToTwelveInstallmentsPercentage = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> upToTwentyOneInstallmentsPercentage = JsonNullable.undefined();

    @JsonProperty("upToTwentyOneInstallmentsPercentage")
    public ApiMyAccountGetAccountFeesPaymentCreditCardDtoBuilder upToTwentyOneInstallmentsPercentage(Double value) {
      if (value == null) {
        throw new IllegalStateException("upToTwentyOneInstallmentsPercentage cannot be null");
      }
      this.upToTwentyOneInstallmentsPercentage = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> discountOneInstallmentPercentage = JsonNullable.undefined();

    @JsonProperty("discountOneInstallmentPercentage")
    public ApiMyAccountGetAccountFeesPaymentCreditCardDtoBuilder discountOneInstallmentPercentage(Double value) {
      if (value == null) {
        throw new IllegalStateException("discountOneInstallmentPercentage cannot be null");
      }
      this.discountOneInstallmentPercentage = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> discountUpToSixInstallmentsPercentage = JsonNullable.undefined();

    @JsonProperty("discountUpToSixInstallmentsPercentage")
    public ApiMyAccountGetAccountFeesPaymentCreditCardDtoBuilder discountUpToSixInstallmentsPercentage(Double value) {
      if (value == null) {
        throw new IllegalStateException("discountUpToSixInstallmentsPercentage cannot be null");
      }
      this.discountUpToSixInstallmentsPercentage = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> discountUpToTwelveInstallmentsPercentage = JsonNullable.undefined();

    @JsonProperty("discountUpToTwelveInstallmentsPercentage")
    public ApiMyAccountGetAccountFeesPaymentCreditCardDtoBuilder discountUpToTwelveInstallmentsPercentage(
      Double value
    ) {
      if (value == null) {
        throw new IllegalStateException("discountUpToTwelveInstallmentsPercentage cannot be null");
      }
      this.discountUpToTwelveInstallmentsPercentage = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> discountUpToTwentyOneInstallmentsPercentage = JsonNullable.undefined();

    @JsonProperty("discountUpToTwentyOneInstallmentsPercentage")
    public ApiMyAccountGetAccountFeesPaymentCreditCardDtoBuilder discountUpToTwentyOneInstallmentsPercentage(
      Double value
    ) {
      if (value == null) {
        throw new IllegalStateException("discountUpToTwentyOneInstallmentsPercentage cannot be null");
      }
      this.discountUpToTwentyOneInstallmentsPercentage = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> discountExpiration = JsonNullable.undefined();

    @JsonProperty("discountExpiration")
    public ApiMyAccountGetAccountFeesPaymentCreditCardDtoBuilder discountExpiration(String value) {
      if (value == null) {
        throw new IllegalStateException("discountExpiration cannot be null");
      }
      this.discountExpiration = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Long> daysToReceive = JsonNullable.undefined();

    @JsonProperty("daysToReceive")
    public ApiMyAccountGetAccountFeesPaymentCreditCardDtoBuilder daysToReceive(Long value) {
      if (value == null) {
        throw new IllegalStateException("daysToReceive cannot be null");
      }
      this.daysToReceive = JsonNullable.of(value);
      return this;
    }
  }
}
