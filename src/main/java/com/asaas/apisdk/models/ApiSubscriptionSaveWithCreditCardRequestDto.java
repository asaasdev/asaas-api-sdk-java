// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiSubscriptionSaveWithCreditCardRequestDto {

  /**
   * Unique customer identifier in Asaas
   */
  @NonNull
  private String customer;

  /**
   * Billing type
   */
  @NonNull
  private ApiSubscriptionSaveWithCreditCardRequestBillingType billingType;

  /**
   * Subscription value
   */
  @NonNull
  private Double value;

  /**
   * First payment due
   */
  @NonNull
  private String nextDueDate;

  /**
   * Billing frequency
   */
  @NonNull
  private ApiSubscriptionSaveWithCreditCardRequestCycle cycle;

  @JsonInclude(JsonInclude.Include.ALWAYS)
  private ApiCreditCardRequestDto creditCard;

  @JsonInclude(JsonInclude.Include.ALWAYS)
  private ApiCreditCardHolderInfoRequestDto creditCardHolderInfo;

  /**
   * IP from where the customer is making the purchase. Your server's IP must not be entered.
   */
  @NonNull
  private String remoteIp;

  @JsonProperty("discount")
  private JsonNullable<ApiPaymentDiscountDto> discount;

  @JsonProperty("interest")
  private JsonNullable<ApiPaymentInterestRequestDto> interest;

  @JsonProperty("fine")
  private JsonNullable<ApiPaymentFineRequestDto> fine;

  /**
   * Subscription description (max. 500 characters)
   */
  @JsonProperty("description")
  private JsonNullable<String> description;

  /**
   * Deadline for payments to be due
   */
  @JsonProperty("endDate")
  private JsonNullable<String> endDate;

  /**
   * Maximum number of payments to be generated for this subscription
   */
  @JsonProperty("maxPayments")
  private JsonNullable<Long> maxPayments;

  /**
   * Subscription identifier on your system
   */
  @JsonProperty("externalReference")
  private JsonNullable<String> externalReference;

  /**
   * Split information
   */
  @JsonProperty("split")
  private JsonNullable<List<ApiSubscriptionSplitRequestDto>> split;

  @JsonProperty("callback")
  private JsonNullable<ApiPaymentCallbackRequestDto> callback;

  /**
   * Credit card token for using the credit card tokenization functionality. If informed, the fields above are not mandatory.
   */
  @JsonProperty("creditCardToken")
  private JsonNullable<String> creditCardToken;

  @JsonIgnore
  public ApiPaymentDiscountDto getDiscount() {
    return discount.orElse(null);
  }

  @JsonIgnore
  public ApiPaymentInterestRequestDto getInterest() {
    return interest.orElse(null);
  }

  @JsonIgnore
  public ApiPaymentFineRequestDto getFine() {
    return fine.orElse(null);
  }

  @JsonIgnore
  public String getDescription() {
    return description.orElse(null);
  }

  @JsonIgnore
  public String getEndDate() {
    return endDate.orElse(null);
  }

  @JsonIgnore
  public Long getMaxPayments() {
    return maxPayments.orElse(null);
  }

  @JsonIgnore
  public String getExternalReference() {
    return externalReference.orElse(null);
  }

  @JsonIgnore
  public List<ApiSubscriptionSplitRequestDto> getSplit() {
    return split.orElse(null);
  }

  @JsonIgnore
  public ApiPaymentCallbackRequestDto getCallback() {
    return callback.orElse(null);
  }

  @JsonIgnore
  public String getCreditCardToken() {
    return creditCardToken.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiSubscriptionSaveWithCreditCardRequestDtoBuilder {

    /**
     * Flag to track if the creditCard property has been set.
     */
    private boolean creditCard$set = false;

    /**
     * Flag to track if the creditCardHolderInfo property has been set.
     */
    private boolean creditCardHolderInfo$set = false;

    public ApiSubscriptionSaveWithCreditCardRequestDtoBuilder creditCard(ApiCreditCardRequestDto creditCard) {
      this.creditCard$set = true;
      this.creditCard = creditCard;
      return this;
    }

    public ApiSubscriptionSaveWithCreditCardRequestDtoBuilder creditCardHolderInfo(
      ApiCreditCardHolderInfoRequestDto creditCardHolderInfo
    ) {
      this.creditCardHolderInfo$set = true;
      this.creditCardHolderInfo = creditCardHolderInfo;
      return this;
    }

    private JsonNullable<ApiPaymentDiscountDto> discount = JsonNullable.undefined();

    @JsonProperty("discount")
    public ApiSubscriptionSaveWithCreditCardRequestDtoBuilder discount(ApiPaymentDiscountDto value) {
      this.discount = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiPaymentInterestRequestDto> interest = JsonNullable.undefined();

    @JsonProperty("interest")
    public ApiSubscriptionSaveWithCreditCardRequestDtoBuilder interest(ApiPaymentInterestRequestDto value) {
      this.interest = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiPaymentFineRequestDto> fine = JsonNullable.undefined();

    @JsonProperty("fine")
    public ApiSubscriptionSaveWithCreditCardRequestDtoBuilder fine(ApiPaymentFineRequestDto value) {
      this.fine = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> description = JsonNullable.undefined();

    @JsonProperty("description")
    public ApiSubscriptionSaveWithCreditCardRequestDtoBuilder description(String value) {
      this.description = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> endDate = JsonNullable.undefined();

    @JsonProperty("endDate")
    public ApiSubscriptionSaveWithCreditCardRequestDtoBuilder endDate(String value) {
      this.endDate = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Long> maxPayments = JsonNullable.undefined();

    @JsonProperty("maxPayments")
    public ApiSubscriptionSaveWithCreditCardRequestDtoBuilder maxPayments(Long value) {
      this.maxPayments = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> externalReference = JsonNullable.undefined();

    @JsonProperty("externalReference")
    public ApiSubscriptionSaveWithCreditCardRequestDtoBuilder externalReference(String value) {
      this.externalReference = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<List<ApiSubscriptionSplitRequestDto>> split = JsonNullable.undefined();

    @JsonProperty("split")
    public ApiSubscriptionSaveWithCreditCardRequestDtoBuilder split(List<ApiSubscriptionSplitRequestDto> value) {
      this.split = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiPaymentCallbackRequestDto> callback = JsonNullable.undefined();

    @JsonProperty("callback")
    public ApiSubscriptionSaveWithCreditCardRequestDtoBuilder callback(ApiPaymentCallbackRequestDto value) {
      this.callback = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> creditCardToken = JsonNullable.undefined();

    @JsonProperty("creditCardToken")
    public ApiSubscriptionSaveWithCreditCardRequestDtoBuilder creditCardToken(String value) {
      this.creditCardToken = JsonNullable.of(value);
      return this;
    }

    public ApiSubscriptionSaveWithCreditCardRequestDto build() {
      if (!creditCard$set) {
        throw new IllegalStateException("creditCard is required");
      }
      if (!creditCardHolderInfo$set) {
        throw new IllegalStateException("creditCardHolderInfo is required");
      }
      return new ApiSubscriptionSaveWithCreditCardRequestDto(
        customer,
        billingType,
        value,
        nextDueDate,
        cycle,
        creditCard,
        creditCardHolderInfo,
        remoteIp,
        discount,
        interest,
        fine,
        description,
        endDate,
        maxPayments,
        externalReference,
        split,
        callback,
        creditCardToken
      );
    }
  }
}
