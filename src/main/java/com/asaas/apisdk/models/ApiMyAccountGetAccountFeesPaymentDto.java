// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiMyAccountGetAccountFeesPaymentDto {

  @JsonProperty("bankSlip")
  private JsonNullable<ApiMyAccountGetAccountFeesPaymentBankSlipDto> bankSlip;

  @JsonProperty("creditCard")
  private JsonNullable<ApiMyAccountGetAccountFeesPaymentCreditCardDto> creditCard;

  @JsonProperty("debitCard")
  private JsonNullable<ApiMyAccountGetAccountFeesPaymentDebitCardDto> debitCard;

  @JsonProperty("pix")
  private JsonNullable<ApiMyAccountGetAccountFeesPaymentPixDto> pix;

  @JsonIgnore
  public ApiMyAccountGetAccountFeesPaymentBankSlipDto getBankSlip() {
    return bankSlip.orElse(null);
  }

  @JsonIgnore
  public ApiMyAccountGetAccountFeesPaymentCreditCardDto getCreditCard() {
    return creditCard.orElse(null);
  }

  @JsonIgnore
  public ApiMyAccountGetAccountFeesPaymentDebitCardDto getDebitCard() {
    return debitCard.orElse(null);
  }

  @JsonIgnore
  public ApiMyAccountGetAccountFeesPaymentPixDto getPix() {
    return pix.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiMyAccountGetAccountFeesPaymentDtoBuilder {

    private JsonNullable<ApiMyAccountGetAccountFeesPaymentBankSlipDto> bankSlip = JsonNullable.undefined();

    @JsonProperty("bankSlip")
    public ApiMyAccountGetAccountFeesPaymentDtoBuilder bankSlip(ApiMyAccountGetAccountFeesPaymentBankSlipDto value) {
      if (value == null) {
        throw new IllegalStateException("bankSlip cannot be null");
      }
      this.bankSlip = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiMyAccountGetAccountFeesPaymentCreditCardDto> creditCard = JsonNullable.undefined();

    @JsonProperty("creditCard")
    public ApiMyAccountGetAccountFeesPaymentDtoBuilder creditCard(
      ApiMyAccountGetAccountFeesPaymentCreditCardDto value
    ) {
      if (value == null) {
        throw new IllegalStateException("creditCard cannot be null");
      }
      this.creditCard = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiMyAccountGetAccountFeesPaymentDebitCardDto> debitCard = JsonNullable.undefined();

    @JsonProperty("debitCard")
    public ApiMyAccountGetAccountFeesPaymentDtoBuilder debitCard(ApiMyAccountGetAccountFeesPaymentDebitCardDto value) {
      if (value == null) {
        throw new IllegalStateException("debitCard cannot be null");
      }
      this.debitCard = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiMyAccountGetAccountFeesPaymentPixDto> pix = JsonNullable.undefined();

    @JsonProperty("pix")
    public ApiMyAccountGetAccountFeesPaymentDtoBuilder pix(ApiMyAccountGetAccountFeesPaymentPixDto value) {
      if (value == null) {
        throw new IllegalStateException("pix cannot be null");
      }
      this.pix = JsonNullable.of(value);
      return this;
    }
  }
}
