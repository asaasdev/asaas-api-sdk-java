// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class MobilePhoneRechargeGetResponseDto {

  /**
   * Unique identifier for cell phone recharge on Asaas
   */
  @JsonProperty("id")
  private JsonNullable<String> id;

  /**
   * Recharge value
   */
  @JsonProperty("value")
  private JsonNullable<Double> value;

  /**
   * Cell phone number that was requested to be recharged
   */
  @JsonProperty("phoneNumber")
  private JsonNullable<String> phoneNumber;

  /**
   * Recharge status
   */
  @JsonProperty("status")
  private JsonNullable<MobilePhoneRechargeGetResponseMobilePhoneRechargeStatus> status;

  /**
   * Whether the top-up can be canceled
   */
  @JsonProperty("canBeCancelled")
  private JsonNullable<Boolean> canBeCancelled;

  /**
   * Name of cell phone operator
   */
  @JsonProperty("operatorName")
  private JsonNullable<String> operatorName;

  @JsonIgnore
  public String getId() {
    return id.orElse(null);
  }

  @JsonIgnore
  public Double getValue() {
    return value.orElse(null);
  }

  @JsonIgnore
  public String getPhoneNumber() {
    return phoneNumber.orElse(null);
  }

  @JsonIgnore
  public MobilePhoneRechargeGetResponseMobilePhoneRechargeStatus getStatus() {
    return status.orElse(null);
  }

  @JsonIgnore
  public Boolean getCanBeCancelled() {
    return canBeCancelled.orElse(null);
  }

  @JsonIgnore
  public String getOperatorName() {
    return operatorName.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class MobilePhoneRechargeGetResponseDtoBuilder {

    private JsonNullable<String> id = JsonNullable.undefined();

    @JsonProperty("id")
    public MobilePhoneRechargeGetResponseDtoBuilder id(String value) {
      this.id = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> value = JsonNullable.undefined();

    @JsonProperty("value")
    public MobilePhoneRechargeGetResponseDtoBuilder value(Double value) {
      this.value = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> phoneNumber = JsonNullable.undefined();

    @JsonProperty("phoneNumber")
    public MobilePhoneRechargeGetResponseDtoBuilder phoneNumber(String value) {
      this.phoneNumber = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<MobilePhoneRechargeGetResponseMobilePhoneRechargeStatus> status = JsonNullable.undefined();

    @JsonProperty("status")
    public MobilePhoneRechargeGetResponseDtoBuilder status(
      MobilePhoneRechargeGetResponseMobilePhoneRechargeStatus value
    ) {
      this.status = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Boolean> canBeCancelled = JsonNullable.of(true);

    @JsonProperty("canBeCancelled")
    public MobilePhoneRechargeGetResponseDtoBuilder canBeCancelled(Boolean value) {
      this.canBeCancelled = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> operatorName = JsonNullable.undefined();

    @JsonProperty("operatorName")
    public MobilePhoneRechargeGetResponseDtoBuilder operatorName(String value) {
      this.operatorName = JsonNullable.of(value);
      return this;
    }
  }
}
