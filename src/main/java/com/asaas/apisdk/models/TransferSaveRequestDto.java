// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class TransferSaveRequestDto {

  /**
   * Amount to be transferred
   */
  @NonNull
  private Double value;

  /**
   * Enter your account details if it is a transfer to a bank account
   */
  @JsonProperty("bankAccount")
  private JsonNullable<TransferBankAccountSaveRequestDto> bankAccount;

  /**
   * Transfer modality. If not informed and the receiving institution is a Pix participant, the transfer is via Pix. Otherwise via TED.
   */
  @JsonProperty("operationType")
  private JsonNullable<TransferSaveRequestTransferType> operationType;

  /**
   * Enter the Pix key if it is a transfer to a Pix key
   */
  @JsonProperty("pixAddressKey")
  private JsonNullable<String> pixAddressKey;

  /**
   * Enter the type of key if it is a transfer to a Pix key
   */
  @JsonProperty("pixAddressKeyType")
  private JsonNullable<TransferSaveRequestPixAddressKeyType> pixAddressKeyType;

  /**
   * Transfers via Pix allow description
   */
  @JsonProperty("description")
  private JsonNullable<String> description;

  /**
   * For scheduled transfers, if not informed, payment is instantaneous
   */
  @JsonProperty("scheduleDate")
  private JsonNullable<String> scheduleDate;

  /**
   * Transfer identifier in your system
   */
  @JsonProperty("externalReference")
  private JsonNullable<String> externalReference;

  /**
   * Recurrence information. Only for Pix transfers
   */
  @JsonProperty("recurring")
  private JsonNullable<TransferRecurringSaveRequestDto> recurring;

  @JsonIgnore
  public TransferBankAccountSaveRequestDto getBankAccount() {
    return bankAccount.orElse(null);
  }

  @JsonIgnore
  public TransferSaveRequestTransferType getOperationType() {
    return operationType.orElse(null);
  }

  @JsonIgnore
  public String getPixAddressKey() {
    return pixAddressKey.orElse(null);
  }

  @JsonIgnore
  public TransferSaveRequestPixAddressKeyType getPixAddressKeyType() {
    return pixAddressKeyType.orElse(null);
  }

  @JsonIgnore
  public String getDescription() {
    return description.orElse(null);
  }

  @JsonIgnore
  public String getScheduleDate() {
    return scheduleDate.orElse(null);
  }

  @JsonIgnore
  public String getExternalReference() {
    return externalReference.orElse(null);
  }

  @JsonIgnore
  public TransferRecurringSaveRequestDto getRecurring() {
    return recurring.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class TransferSaveRequestDtoBuilder {

    private JsonNullable<TransferBankAccountSaveRequestDto> bankAccount = JsonNullable.undefined();

    @JsonProperty("bankAccount")
    public TransferSaveRequestDtoBuilder bankAccount(TransferBankAccountSaveRequestDto value) {
      this.bankAccount = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<TransferSaveRequestTransferType> operationType = JsonNullable.undefined();

    @JsonProperty("operationType")
    public TransferSaveRequestDtoBuilder operationType(TransferSaveRequestTransferType value) {
      this.operationType = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> pixAddressKey = JsonNullable.undefined();

    @JsonProperty("pixAddressKey")
    public TransferSaveRequestDtoBuilder pixAddressKey(String value) {
      this.pixAddressKey = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<TransferSaveRequestPixAddressKeyType> pixAddressKeyType = JsonNullable.undefined();

    @JsonProperty("pixAddressKeyType")
    public TransferSaveRequestDtoBuilder pixAddressKeyType(TransferSaveRequestPixAddressKeyType value) {
      this.pixAddressKeyType = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> description = JsonNullable.undefined();

    @JsonProperty("description")
    public TransferSaveRequestDtoBuilder description(String value) {
      this.description = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> scheduleDate = JsonNullable.undefined();

    @JsonProperty("scheduleDate")
    public TransferSaveRequestDtoBuilder scheduleDate(String value) {
      this.scheduleDate = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> externalReference = JsonNullable.undefined();

    @JsonProperty("externalReference")
    public TransferSaveRequestDtoBuilder externalReference(String value) {
      this.externalReference = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<TransferRecurringSaveRequestDto> recurring = JsonNullable.undefined();

    @JsonProperty("recurring")
    public TransferSaveRequestDtoBuilder recurring(TransferRecurringSaveRequestDto value) {
      this.recurring = JsonNullable.of(value);
      return this;
    }
  }
}
