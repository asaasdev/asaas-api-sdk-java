// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiTransferRecurringSaveRequestDto {

  /**
   * Frequency
   */
  @JsonProperty("frequency")
  private JsonNullable<ApiTransferRecurringSaveRequestRecurringCheckoutScheduleFrequency> frequency;

  /**
   * Number of repetitions. This transfer will be included as the first transaction of the recurrence.
   * For the `WEEKLY` frequency, the maximum accepted is: `51`
   * For the `MONTHLY` frequency, the maximum accepted is: `11`
   */
  @JsonProperty("quantity")
  private JsonNullable<Long> quantity;

  @JsonIgnore
  public ApiTransferRecurringSaveRequestRecurringCheckoutScheduleFrequency getFrequency() {
    return frequency.orElse(null);
  }

  @JsonIgnore
  public Long getQuantity() {
    return quantity.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiTransferRecurringSaveRequestDtoBuilder {

    private JsonNullable<ApiTransferRecurringSaveRequestRecurringCheckoutScheduleFrequency> frequency =
      JsonNullable.undefined();

    @JsonProperty("frequency")
    public ApiTransferRecurringSaveRequestDtoBuilder frequency(
      ApiTransferRecurringSaveRequestRecurringCheckoutScheduleFrequency value
    ) {
      this.frequency = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Long> quantity = JsonNullable.undefined();

    @JsonProperty("quantity")
    public ApiTransferRecurringSaveRequestDtoBuilder quantity(Long value) {
      this.quantity = JsonNullable.of(value);
      return this;
    }
  }
}
