// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class PixRecurringTransactionGetItemResponseDto {

  /**
   * Unique recurrence item identifier in Asaas
   */
  @JsonProperty("id")
  private JsonNullable<String> id;

  /**
   * Recurrence item status
   */
  @JsonProperty("status")
  private JsonNullable<PixRecurringTransactionGetItemResponsePixRecurringTransactionItemStatus> status;

  /**
   * Recurrence item scheduled date
   */
  @JsonProperty("scheduledDate")
  private JsonNullable<String> scheduledDate;

  /**
   * Whether the recurrence item can be cancelled
   */
  @JsonProperty("canBeCancelled")
  private JsonNullable<Boolean> canBeCancelled;

  /**
   * Recurrence number
   */
  @JsonProperty("recurrenceNumber")
  private JsonNullable<Long> recurrenceNumber;

  /**
   * Number of repetitions
   */
  @JsonProperty("quantity")
  private JsonNullable<Long> quantity;

  /**
   * Recurrence value
   */
  @JsonProperty("value")
  private JsonNullable<Double> value;

  /**
   * Recurrence item refusal reason
   */
  @JsonProperty("refusalReasonDescription")
  private JsonNullable<String> refusalReasonDescription;

  /**
   * Receiver information
   */
  @JsonProperty("externalAccount")
  private JsonNullable<PixRecurringTransactionExternalAccountDto> externalAccount;

  @JsonIgnore
  public String getId() {
    return id.orElse(null);
  }

  @JsonIgnore
  public PixRecurringTransactionGetItemResponsePixRecurringTransactionItemStatus getStatus() {
    return status.orElse(null);
  }

  @JsonIgnore
  public String getScheduledDate() {
    return scheduledDate.orElse(null);
  }

  @JsonIgnore
  public Boolean getCanBeCancelled() {
    return canBeCancelled.orElse(null);
  }

  @JsonIgnore
  public Long getRecurrenceNumber() {
    return recurrenceNumber.orElse(null);
  }

  @JsonIgnore
  public Long getQuantity() {
    return quantity.orElse(null);
  }

  @JsonIgnore
  public Double getValue() {
    return value.orElse(null);
  }

  @JsonIgnore
  public String getRefusalReasonDescription() {
    return refusalReasonDescription.orElse(null);
  }

  @JsonIgnore
  public PixRecurringTransactionExternalAccountDto getExternalAccount() {
    return externalAccount.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class PixRecurringTransactionGetItemResponseDtoBuilder {

    private JsonNullable<String> id = JsonNullable.undefined();

    @JsonProperty("id")
    public PixRecurringTransactionGetItemResponseDtoBuilder id(String value) {
      this.id = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PixRecurringTransactionGetItemResponsePixRecurringTransactionItemStatus> status =
      JsonNullable.undefined();

    @JsonProperty("status")
    public PixRecurringTransactionGetItemResponseDtoBuilder status(
      PixRecurringTransactionGetItemResponsePixRecurringTransactionItemStatus value
    ) {
      this.status = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> scheduledDate = JsonNullable.undefined();

    @JsonProperty("scheduledDate")
    public PixRecurringTransactionGetItemResponseDtoBuilder scheduledDate(String value) {
      this.scheduledDate = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Boolean> canBeCancelled = JsonNullable.undefined();

    @JsonProperty("canBeCancelled")
    public PixRecurringTransactionGetItemResponseDtoBuilder canBeCancelled(Boolean value) {
      this.canBeCancelled = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Long> recurrenceNumber = JsonNullable.undefined();

    @JsonProperty("recurrenceNumber")
    public PixRecurringTransactionGetItemResponseDtoBuilder recurrenceNumber(Long value) {
      this.recurrenceNumber = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Long> quantity = JsonNullable.undefined();

    @JsonProperty("quantity")
    public PixRecurringTransactionGetItemResponseDtoBuilder quantity(Long value) {
      this.quantity = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> value = JsonNullable.undefined();

    @JsonProperty("value")
    public PixRecurringTransactionGetItemResponseDtoBuilder value(Double value) {
      this.value = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> refusalReasonDescription = JsonNullable.undefined();

    @JsonProperty("refusalReasonDescription")
    public PixRecurringTransactionGetItemResponseDtoBuilder refusalReasonDescription(String value) {
      this.refusalReasonDescription = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PixRecurringTransactionExternalAccountDto> externalAccount = JsonNullable.undefined();

    @JsonProperty("externalAccount")
    public PixRecurringTransactionGetItemResponseDtoBuilder externalAccount(
      PixRecurringTransactionExternalAccountDto value
    ) {
      this.externalAccount = JsonNullable.of(value);
      return this;
    }
  }
}
