// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiPixTransactionRecurringCheckoutScheduleExternalAccountDto {

  /**
   * Receiver name
   */
  @JsonProperty("name")
  private JsonNullable<String> name;

  /**
   * Payment institution name
   */
  @JsonProperty("financialInstitutionName")
  private JsonNullable<String> financialInstitutionName;

  /**
   * Receiver CPF or CNPJ
   */
  @JsonProperty("cpfCnpj")
  private JsonNullable<String> cpfCnpj;

  /**
   * Receiver Pix key
   */
  @JsonProperty("pixKey")
  private JsonNullable<String> pixKey;

  @JsonIgnore
  public String getName() {
    return name.orElse(null);
  }

  @JsonIgnore
  public String getFinancialInstitutionName() {
    return financialInstitutionName.orElse(null);
  }

  @JsonIgnore
  public String getCpfCnpj() {
    return cpfCnpj.orElse(null);
  }

  @JsonIgnore
  public String getPixKey() {
    return pixKey.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiPixTransactionRecurringCheckoutScheduleExternalAccountDtoBuilder {

    private JsonNullable<String> name = JsonNullable.undefined();

    @JsonProperty("name")
    public ApiPixTransactionRecurringCheckoutScheduleExternalAccountDtoBuilder name(String value) {
      if (value == null) {
        throw new IllegalStateException("name cannot be null");
      }
      this.name = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> financialInstitutionName = JsonNullable.undefined();

    @JsonProperty("financialInstitutionName")
    public ApiPixTransactionRecurringCheckoutScheduleExternalAccountDtoBuilder financialInstitutionName(String value) {
      if (value == null) {
        throw new IllegalStateException("financialInstitutionName cannot be null");
      }
      this.financialInstitutionName = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> cpfCnpj = JsonNullable.undefined();

    @JsonProperty("cpfCnpj")
    public ApiPixTransactionRecurringCheckoutScheduleExternalAccountDtoBuilder cpfCnpj(String value) {
      if (value == null) {
        throw new IllegalStateException("cpfCnpj cannot be null");
      }
      this.cpfCnpj = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> pixKey = JsonNullable.undefined();

    @JsonProperty("pixKey")
    public ApiPixTransactionRecurringCheckoutScheduleExternalAccountDtoBuilder pixKey(String value) {
      if (value == null) {
        throw new IllegalStateException("pixKey cannot be null");
      }
      this.pixKey = JsonNullable.of(value);
      return this;
    }
  }
}
