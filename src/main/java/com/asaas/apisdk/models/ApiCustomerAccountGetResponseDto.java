// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiCustomerAccountGetResponseDto {

  /**
   * Object type
   */
  @JsonProperty("object")
  private JsonNullable<String> object;

  /**
   * Unique customer identifier
   */
  @JsonProperty("id")
  private JsonNullable<String> id;

  /**
   * Customer creation date
   */
  @JsonProperty("dateCreated")
  private JsonNullable<String> dateCreated;

  /**
   * Client name
   */
  @JsonProperty("name")
  private JsonNullable<String> name;

  /**
   * Customer email
   */
  @JsonProperty("email")
  private JsonNullable<String> email;

  /**
   * Customer phone
   */
  @JsonProperty("phone")
  private JsonNullable<String> phone;

  /**
   * Customer cell phone
   */
  @JsonProperty("mobilePhone")
  private JsonNullable<String> mobilePhone;

  /**
   * Customer address
   */
  @JsonProperty("address")
  private JsonNullable<String> address;

  /**
   * Customer address number
   */
  @JsonProperty("addressNumber")
  private JsonNullable<String> addressNumber;

  /**
   * Customer address complement
   */
  @JsonProperty("complement")
  private JsonNullable<String> complement;

  /**
   * Customer address neighborhood
   */
  @JsonProperty("province")
  private JsonNullable<String> province;

  /**
   * Unique city identifier in Asaas
   */
  @JsonProperty("city")
  private JsonNullable<String> city;

  /**
   * City of customer address
   */
  @JsonProperty("cityName")
  private JsonNullable<String> cityName;

  /**
   * Customer address status
   */
  @JsonProperty("state")
  private JsonNullable<String> state;

  /**
   * Customer country
   */
  @JsonProperty("country")
  private JsonNullable<String> country;

  /**
   * Customer address zip code
   */
  @JsonProperty("postalCode")
  private JsonNullable<String> postalCode;

  /**
   * Customer CPF or CNPJ
   */
  @JsonProperty("cpfCnpj")
  private JsonNullable<String> cpfCnpj;

  /**
   * Kind of person
   */
  @JsonProperty("personType")
  private JsonNullable<ApiCustomerAccountGetResponsePersonType> personType;

  /**
   * Indicates whether it is a deleted client
   */
  @JsonProperty("deleted")
  private JsonNullable<Boolean> deleted;

  /**
   * Additional customer emails
   */
  @JsonProperty("additionalEmails")
  private JsonNullable<String> additionalEmails;

  /**
   * External customer reference
   */
  @JsonProperty("externalReference")
  private JsonNullable<String> externalReference;

  /**
   * Indicates whether notifications are disabled
   */
  @JsonProperty("notificationDisabled")
  private JsonNullable<Boolean> notificationDisabled;

  /**
   * Customer Observations
   */
  @JsonProperty("observations")
  private JsonNullable<String> observations;

  /**
   * Indicates if it's non-brazilian customer
   */
  @JsonProperty("foreignCustomer")
  private JsonNullable<Boolean> foreignCustomer;

  @JsonIgnore
  public String getObject() {
    return object.orElse(null);
  }

  @JsonIgnore
  public String getId() {
    return id.orElse(null);
  }

  @JsonIgnore
  public String getDateCreated() {
    return dateCreated.orElse(null);
  }

  @JsonIgnore
  public String getName() {
    return name.orElse(null);
  }

  @JsonIgnore
  public String getEmail() {
    return email.orElse(null);
  }

  @JsonIgnore
  public String getPhone() {
    return phone.orElse(null);
  }

  @JsonIgnore
  public String getMobilePhone() {
    return mobilePhone.orElse(null);
  }

  @JsonIgnore
  public String getAddress() {
    return address.orElse(null);
  }

  @JsonIgnore
  public String getAddressNumber() {
    return addressNumber.orElse(null);
  }

  @JsonIgnore
  public String getComplement() {
    return complement.orElse(null);
  }

  @JsonIgnore
  public String getProvince() {
    return province.orElse(null);
  }

  @JsonIgnore
  public String getCity() {
    return city.orElse(null);
  }

  @JsonIgnore
  public String getCityName() {
    return cityName.orElse(null);
  }

  @JsonIgnore
  public String getState() {
    return state.orElse(null);
  }

  @JsonIgnore
  public String getCountry() {
    return country.orElse(null);
  }

  @JsonIgnore
  public String getPostalCode() {
    return postalCode.orElse(null);
  }

  @JsonIgnore
  public String getCpfCnpj() {
    return cpfCnpj.orElse(null);
  }

  @JsonIgnore
  public ApiCustomerAccountGetResponsePersonType getPersonType() {
    return personType.orElse(null);
  }

  @JsonIgnore
  public Boolean getDeleted() {
    return deleted.orElse(null);
  }

  @JsonIgnore
  public String getAdditionalEmails() {
    return additionalEmails.orElse(null);
  }

  @JsonIgnore
  public String getExternalReference() {
    return externalReference.orElse(null);
  }

  @JsonIgnore
  public Boolean getNotificationDisabled() {
    return notificationDisabled.orElse(null);
  }

  @JsonIgnore
  public String getObservations() {
    return observations.orElse(null);
  }

  @JsonIgnore
  public Boolean getForeignCustomer() {
    return foreignCustomer.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiCustomerAccountGetResponseDtoBuilder {

    private JsonNullable<String> object = JsonNullable.undefined();

    @JsonProperty("object")
    public ApiCustomerAccountGetResponseDtoBuilder object(String value) {
      this.object = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> id = JsonNullable.undefined();

    @JsonProperty("id")
    public ApiCustomerAccountGetResponseDtoBuilder id(String value) {
      this.id = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> dateCreated = JsonNullable.undefined();

    @JsonProperty("dateCreated")
    public ApiCustomerAccountGetResponseDtoBuilder dateCreated(String value) {
      this.dateCreated = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> name = JsonNullable.undefined();

    @JsonProperty("name")
    public ApiCustomerAccountGetResponseDtoBuilder name(String value) {
      this.name = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> email = JsonNullable.undefined();

    @JsonProperty("email")
    public ApiCustomerAccountGetResponseDtoBuilder email(String value) {
      this.email = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> phone = JsonNullable.undefined();

    @JsonProperty("phone")
    public ApiCustomerAccountGetResponseDtoBuilder phone(String value) {
      this.phone = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> mobilePhone = JsonNullable.undefined();

    @JsonProperty("mobilePhone")
    public ApiCustomerAccountGetResponseDtoBuilder mobilePhone(String value) {
      this.mobilePhone = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> address = JsonNullable.undefined();

    @JsonProperty("address")
    public ApiCustomerAccountGetResponseDtoBuilder address(String value) {
      this.address = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> addressNumber = JsonNullable.undefined();

    @JsonProperty("addressNumber")
    public ApiCustomerAccountGetResponseDtoBuilder addressNumber(String value) {
      this.addressNumber = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> complement = JsonNullable.undefined();

    @JsonProperty("complement")
    public ApiCustomerAccountGetResponseDtoBuilder complement(String value) {
      this.complement = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> province = JsonNullable.undefined();

    @JsonProperty("province")
    public ApiCustomerAccountGetResponseDtoBuilder province(String value) {
      this.province = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> city = JsonNullable.undefined();

    @JsonProperty("city")
    public ApiCustomerAccountGetResponseDtoBuilder city(String value) {
      this.city = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> cityName = JsonNullable.undefined();

    @JsonProperty("cityName")
    public ApiCustomerAccountGetResponseDtoBuilder cityName(String value) {
      this.cityName = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> state = JsonNullable.undefined();

    @JsonProperty("state")
    public ApiCustomerAccountGetResponseDtoBuilder state(String value) {
      this.state = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> country = JsonNullable.undefined();

    @JsonProperty("country")
    public ApiCustomerAccountGetResponseDtoBuilder country(String value) {
      this.country = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> postalCode = JsonNullable.undefined();

    @JsonProperty("postalCode")
    public ApiCustomerAccountGetResponseDtoBuilder postalCode(String value) {
      this.postalCode = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> cpfCnpj = JsonNullable.undefined();

    @JsonProperty("cpfCnpj")
    public ApiCustomerAccountGetResponseDtoBuilder cpfCnpj(String value) {
      this.cpfCnpj = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiCustomerAccountGetResponsePersonType> personType = JsonNullable.undefined();

    @JsonProperty("personType")
    public ApiCustomerAccountGetResponseDtoBuilder personType(ApiCustomerAccountGetResponsePersonType value) {
      this.personType = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Boolean> deleted = JsonNullable.undefined();

    @JsonProperty("deleted")
    public ApiCustomerAccountGetResponseDtoBuilder deleted(Boolean value) {
      this.deleted = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> additionalEmails = JsonNullable.undefined();

    @JsonProperty("additionalEmails")
    public ApiCustomerAccountGetResponseDtoBuilder additionalEmails(String value) {
      this.additionalEmails = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> externalReference = JsonNullable.undefined();

    @JsonProperty("externalReference")
    public ApiCustomerAccountGetResponseDtoBuilder externalReference(String value) {
      this.externalReference = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Boolean> notificationDisabled = JsonNullable.undefined();

    @JsonProperty("notificationDisabled")
    public ApiCustomerAccountGetResponseDtoBuilder notificationDisabled(Boolean value) {
      this.notificationDisabled = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> observations = JsonNullable.undefined();

    @JsonProperty("observations")
    public ApiCustomerAccountGetResponseDtoBuilder observations(String value) {
      this.observations = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Boolean> foreignCustomer = JsonNullable.undefined();

    @JsonProperty("foreignCustomer")
    public ApiCustomerAccountGetResponseDtoBuilder foreignCustomer(Boolean value) {
      this.foreignCustomer = JsonNullable.of(value);
      return this;
    }
  }
}
