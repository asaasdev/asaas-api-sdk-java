// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class MyAccountGetStatusResponseDto {

  /**
   * Unique account identifier in Asaas
   */
  @JsonProperty("id")
  private JsonNullable<String> id;

  /**
   * Status of sent business data
   */
  @JsonProperty("commercialInfo")
  private JsonNullable<MyAccountGetStatusResponseStatus> commercialInfo;

  /**
   * Status of sent business data
   */
  @JsonProperty("bankAccountInfo")
  private JsonNullable<MyAccountGetStatusResponseStatus> bankAccountInfo;

  /**
   * Status of sent business data
   */
  @JsonProperty("documentation")
  private JsonNullable<MyAccountGetStatusResponseStatus> documentation;

  /**
   * Status of sent business data
   */
  @JsonProperty("general")
  private JsonNullable<MyAccountGetStatusResponseStatus> general;

  @JsonIgnore
  public String getId() {
    return id.orElse(null);
  }

  @JsonIgnore
  public MyAccountGetStatusResponseStatus getCommercialInfo() {
    return commercialInfo.orElse(null);
  }

  @JsonIgnore
  public MyAccountGetStatusResponseStatus getBankAccountInfo() {
    return bankAccountInfo.orElse(null);
  }

  @JsonIgnore
  public MyAccountGetStatusResponseStatus getDocumentation() {
    return documentation.orElse(null);
  }

  @JsonIgnore
  public MyAccountGetStatusResponseStatus getGeneral() {
    return general.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class MyAccountGetStatusResponseDtoBuilder {

    private JsonNullable<String> id = JsonNullable.undefined();

    @JsonProperty("id")
    public MyAccountGetStatusResponseDtoBuilder id(String value) {
      this.id = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<MyAccountGetStatusResponseStatus> commercialInfo = JsonNullable.undefined();

    @JsonProperty("commercialInfo")
    public MyAccountGetStatusResponseDtoBuilder commercialInfo(MyAccountGetStatusResponseStatus value) {
      this.commercialInfo = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<MyAccountGetStatusResponseStatus> bankAccountInfo = JsonNullable.undefined();

    @JsonProperty("bankAccountInfo")
    public MyAccountGetStatusResponseDtoBuilder bankAccountInfo(MyAccountGetStatusResponseStatus value) {
      this.bankAccountInfo = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<MyAccountGetStatusResponseStatus> documentation = JsonNullable.undefined();

    @JsonProperty("documentation")
    public MyAccountGetStatusResponseDtoBuilder documentation(MyAccountGetStatusResponseStatus value) {
      this.documentation = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<MyAccountGetStatusResponseStatus> general = JsonNullable.undefined();

    @JsonProperty("general")
    public MyAccountGetStatusResponseDtoBuilder general(MyAccountGetStatusResponseStatus value) {
      this.general = JsonNullable.of(value);
      return this;
    }
  }
}
