// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class GenerateInstallmentBookletParameters {

  /**
   * Filter by column name
   */
  @JsonProperty("sort")
  private JsonNullable<String> sort;

  /**
   * Column ordering
   */
  @JsonProperty("order")
  private JsonNullable<String> order;

  @JsonIgnore
  public String getSort() {
    return sort.orElse(null);
  }

  @JsonIgnore
  public String getOrder() {
    return order.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class GenerateInstallmentBookletParametersBuilder {

    private JsonNullable<String> sort = JsonNullable.undefined();

    @JsonProperty("sort")
    public GenerateInstallmentBookletParametersBuilder sort(String value) {
      if (value == null) {
        throw new IllegalStateException("sort cannot be null");
      }
      this.sort = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> order = JsonNullable.undefined();

    @JsonProperty("order")
    public GenerateInstallmentBookletParametersBuilder order(String value) {
      if (value == null) {
        throw new IllegalStateException("order cannot be null");
      }
      this.order = JsonNullable.of(value);
      return this;
    }
  }
}
