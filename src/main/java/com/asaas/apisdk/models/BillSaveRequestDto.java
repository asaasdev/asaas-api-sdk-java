// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class BillSaveRequestDto {

  /**
   * Digitizable bill line
   */
  @NonNull
  private String identificationField;

  /**
   * Payment scheduling date
   */
  @JsonProperty("scheduleDate")
  private JsonNullable<String> scheduleDate;

  /**
   * Bill Payment Description
   */
  @JsonProperty("description")
  private JsonNullable<String> description;

  /**
   * Discount attributed to payment
   */
  @JsonProperty("discount")
  private JsonNullable<Double> discount;

  /**
   * Interest attributed to payment
   */
  @JsonProperty("interest")
  private JsonNullable<Double> interest;

  /**
   * Fine assigned to payment
   */
  @JsonProperty("fine")
  private JsonNullable<Double> fine;

  /**
   * Expiration date of the account if it is the type that does not have this information
   */
  @JsonProperty("dueDate")
  private JsonNullable<String> dueDate;

  /**
   * Account value if it is the type that does not have this information (Ex: credit card invoices)
   */
  @JsonProperty("value")
  private JsonNullable<Double> value;

  /**
   * Unique identifier of the bill in your system
   */
  @JsonProperty("externalReference")
  private JsonNullable<String> externalReference;

  @JsonIgnore
  public String getScheduleDate() {
    return scheduleDate.orElse(null);
  }

  @JsonIgnore
  public String getDescription() {
    return description.orElse(null);
  }

  @JsonIgnore
  public Double getDiscount() {
    return discount.orElse(null);
  }

  @JsonIgnore
  public Double getInterest() {
    return interest.orElse(null);
  }

  @JsonIgnore
  public Double getFine() {
    return fine.orElse(null);
  }

  @JsonIgnore
  public String getDueDate() {
    return dueDate.orElse(null);
  }

  @JsonIgnore
  public Double getValue() {
    return value.orElse(null);
  }

  @JsonIgnore
  public String getExternalReference() {
    return externalReference.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class BillSaveRequestDtoBuilder {

    private JsonNullable<String> scheduleDate = JsonNullable.undefined();

    @JsonProperty("scheduleDate")
    public BillSaveRequestDtoBuilder scheduleDate(String value) {
      this.scheduleDate = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> description = JsonNullable.undefined();

    @JsonProperty("description")
    public BillSaveRequestDtoBuilder description(String value) {
      this.description = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> discount = JsonNullable.undefined();

    @JsonProperty("discount")
    public BillSaveRequestDtoBuilder discount(Double value) {
      this.discount = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> interest = JsonNullable.undefined();

    @JsonProperty("interest")
    public BillSaveRequestDtoBuilder interest(Double value) {
      this.interest = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> fine = JsonNullable.undefined();

    @JsonProperty("fine")
    public BillSaveRequestDtoBuilder fine(Double value) {
      this.fine = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> dueDate = JsonNullable.undefined();

    @JsonProperty("dueDate")
    public BillSaveRequestDtoBuilder dueDate(String value) {
      this.dueDate = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> value = JsonNullable.undefined();

    @JsonProperty("value")
    public BillSaveRequestDtoBuilder value(Double value) {
      this.value = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> externalReference = JsonNullable.undefined();

    @JsonProperty("externalReference")
    public BillSaveRequestDtoBuilder externalReference(String value) {
      this.externalReference = JsonNullable.of(value);
      return this;
    }
  }
}
