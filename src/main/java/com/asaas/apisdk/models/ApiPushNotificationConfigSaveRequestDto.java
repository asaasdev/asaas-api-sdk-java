// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiPushNotificationConfigSaveRequestDto {

  /**
   * Webhook name
   */
  @JsonProperty("name")
  private JsonNullable<String> name;

  /**
   * Webhook URL
   */
  @JsonProperty("url")
  private JsonNullable<String> url;

  /**
   * Email that will receive notifications about the Webhook
   */
  @JsonProperty("email")
  private JsonNullable<String> email;

  /**
   * Set whether the Webhook is active
   */
  @JsonProperty("enabled")
  private JsonNullable<Boolean> enabled;

  /**
   * Set whether the sync queue is stopped
   */
  @JsonProperty("interrupted")
  private JsonNullable<Boolean> interrupted;

  /**
   * API Version
   */
  @JsonProperty("apiVersion")
  private JsonNullable<Long> apiVersion;

  /**
   * Webhook authentication token
   */
  @JsonProperty("authToken")
  private JsonNullable<String> authToken;

  /**
   * Sequential (SEQUENTIALLY) or non-sequential (NON_SEQUENTIALLY)
   */
  @JsonProperty("sendType")
  private JsonNullable<ApiPushNotificationConfigSaveRequestPushNotificationSendType> sendType;

  /**
   * List of events this Webhook will observe
   */
  @JsonProperty("events")
  private JsonNullable<List<String>> events;

  @JsonIgnore
  public String getName() {
    return name.orElse(null);
  }

  @JsonIgnore
  public String getUrl() {
    return url.orElse(null);
  }

  @JsonIgnore
  public String getEmail() {
    return email.orElse(null);
  }

  @JsonIgnore
  public Boolean getEnabled() {
    return enabled.orElse(null);
  }

  @JsonIgnore
  public Boolean getInterrupted() {
    return interrupted.orElse(null);
  }

  @JsonIgnore
  public Long getApiVersion() {
    return apiVersion.orElse(null);
  }

  @JsonIgnore
  public String getAuthToken() {
    return authToken.orElse(null);
  }

  @JsonIgnore
  public ApiPushNotificationConfigSaveRequestPushNotificationSendType getSendType() {
    return sendType.orElse(null);
  }

  @JsonIgnore
  public List<String> getEvents() {
    return events.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiPushNotificationConfigSaveRequestDtoBuilder {

    private JsonNullable<String> name = JsonNullable.undefined();

    @JsonProperty("name")
    public ApiPushNotificationConfigSaveRequestDtoBuilder name(String value) {
      this.name = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> url = JsonNullable.undefined();

    @JsonProperty("url")
    public ApiPushNotificationConfigSaveRequestDtoBuilder url(String value) {
      this.url = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> email = JsonNullable.undefined();

    @JsonProperty("email")
    public ApiPushNotificationConfigSaveRequestDtoBuilder email(String value) {
      this.email = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Boolean> enabled = JsonNullable.undefined();

    @JsonProperty("enabled")
    public ApiPushNotificationConfigSaveRequestDtoBuilder enabled(Boolean value) {
      this.enabled = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Boolean> interrupted = JsonNullable.undefined();

    @JsonProperty("interrupted")
    public ApiPushNotificationConfigSaveRequestDtoBuilder interrupted(Boolean value) {
      this.interrupted = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Long> apiVersion = JsonNullable.undefined();

    @JsonProperty("apiVersion")
    public ApiPushNotificationConfigSaveRequestDtoBuilder apiVersion(Long value) {
      this.apiVersion = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> authToken = JsonNullable.undefined();

    @JsonProperty("authToken")
    public ApiPushNotificationConfigSaveRequestDtoBuilder authToken(String value) {
      this.authToken = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiPushNotificationConfigSaveRequestPushNotificationSendType> sendType =
      JsonNullable.undefined();

    @JsonProperty("sendType")
    public ApiPushNotificationConfigSaveRequestDtoBuilder sendType(
      ApiPushNotificationConfigSaveRequestPushNotificationSendType value
    ) {
      this.sendType = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<List<String>> events = JsonNullable.undefined();

    @JsonProperty("events")
    public ApiPushNotificationConfigSaveRequestDtoBuilder events(List<String> value) {
      this.events = JsonNullable.of(value);
      return this;
    }
  }
}
