// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiAccountDocumentSaveRequestDto {

  /**
   * File
   */
  @JsonProperty("documentFile")
  private JsonNullable<byte[]> documentFile;

  /**
   * Document Type
   */
  @JsonProperty("type")
  private JsonNullable<ApiAccountDocumentSaveRequestCustomerDocumentType> type;

  @JsonIgnore
  public byte[] getDocumentFile() {
    return documentFile.orElse(null);
  }

  @JsonIgnore
  public ApiAccountDocumentSaveRequestCustomerDocumentType getType() {
    return type.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiAccountDocumentSaveRequestDtoBuilder {

    private JsonNullable<byte[]> documentFile = JsonNullable.undefined();

    @JsonProperty("documentFile")
    public ApiAccountDocumentSaveRequestDtoBuilder documentFile(byte[] value) {
      if (value == null) {
        throw new IllegalStateException("documentFile cannot be null");
      }
      this.documentFile = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiAccountDocumentSaveRequestCustomerDocumentType> type = JsonNullable.undefined();

    @JsonProperty("type")
    public ApiAccountDocumentSaveRequestDtoBuilder type(ApiAccountDocumentSaveRequestCustomerDocumentType value) {
      if (value == null) {
        throw new IllegalStateException("type cannot be null");
      }
      this.type = JsonNullable.of(value);
      return this;
    }
  }
}
