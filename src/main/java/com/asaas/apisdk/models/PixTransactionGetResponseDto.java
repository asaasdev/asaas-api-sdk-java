// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class PixTransactionGetResponseDto {

  /**
   * Unique identifier of the Pix transaction in Asaas
   */
  @JsonProperty("id")
  private JsonNullable<String> id;

  /**
   * Pix transaction identifier at the Central Bank
   */
  @JsonProperty("endToEndIdentifier")
  private JsonNullable<String> endToEndIdentifier;

  /**
   * Used to indicate whether it is a Withdrawal or Change
   */
  @JsonProperty("finality")
  private JsonNullable<PixTransactionGetResponsePixTransactionCashValueFinality> finality;

  /**
   * Transaction or Withdrawal Value
   */
  @JsonProperty("value")
  private JsonNullable<Double> value;

  /**
   * Change value
   */
  @JsonProperty("changeValue")
  private JsonNullable<Double> changeValue;

  /**
   * Value reversed
   */
  @JsonProperty("refundedValue")
  private JsonNullable<Double> refundedValue;

  /**
   * Transaction date
   */
  @JsonProperty("effectiveDate")
  private JsonNullable<String> effectiveDate;

  /**
   * Schedule date
   */
  @JsonProperty("scheduledDate")
  private JsonNullable<String> scheduledDate;

  /**
   * Transaction status
   */
  @JsonProperty("status")
  private JsonNullable<PixTransactionGetResponsePixTransactionStatus> status;

  /**
   * Transaction type
   */
  @JsonProperty("type")
  private JsonNullable<PixTransactionGetResponsePixTransactionType> type;

  /**
   * Indicates the origin of the transaction
   */
  @JsonProperty("originType")
  private JsonNullable<PixTransactionGetResponsePixTransactionOriginType> originType;

  /**
   * QrCode identifier linked to the transaction
   */
  @JsonProperty("conciliationIdentifier")
  private JsonNullable<String> conciliationIdentifier;

  /**
   * Description about the transaction
   */
  @JsonProperty("description")
  private JsonNullable<String> description;

  /**
   * Proof of transaction will be available after the transaction is confirmed.
   */
  @JsonProperty("transactionReceiptUrl")
  private JsonNullable<String> transactionReceiptUrl;

  /**
   * Reason why the transaction was declined
   */
  @JsonProperty("refusalReason")
  private JsonNullable<String> refusalReason;

  /**
   * Indicates whether the transaction can be canceled
   */
  @JsonProperty("canBeCanceled")
  private JsonNullable<Boolean> canBeCanceled;

  /**
   * Original transaction information if a chargeback has occurred
   */
  @JsonProperty("originalTransaction")
  private JsonNullable<PixOriginalTransactionResponseDto> originalTransaction;

  /**
   * Information about the recipient
   */
  @JsonProperty("externalAccount")
  private JsonNullable<PixTransactionExternalAccountResponseDto> externalAccount;

  /**
   * Information about QrCode
   */
  @JsonProperty("qrCode")
  private JsonNullable<PixTransactionQrCodeResponseDto> qrCode;

  /**
   * Unique billing identifier
   */
  @JsonProperty("payment")
  private JsonNullable<String> payment;

  /**
   * Indicates whether the transaction can be refunded
   */
  @JsonProperty("canBeRefunded")
  private JsonNullable<Boolean> canBeRefunded;

  /**
   * Reason why the chargeback was disabled
   */
  @JsonProperty("refundDisabledReason")
  private JsonNullable<String> refundDisabledReason;

  /**
   * Debit or credit fee for the transaction
   */
  @JsonProperty("chargedFeeValue")
  private JsonNullable<Double> chargedFeeValue;

  /**
   * Transaction creation date
   */
  @JsonProperty("dateCreated")
  private JsonNullable<String> dateCreated;

  /**
   * Pix key when the transaction is a credit
   */
  @JsonProperty("addressKey")
  private JsonNullable<String> addressKey;

  /**
   * Pix key type
   */
  @JsonProperty("addressKeyType")
  private JsonNullable<PixTransactionGetResponsePixAddressKeyType> addressKeyType;

  /**
   * Transfer identifier
   */
  @JsonProperty("transferId")
  private JsonNullable<String> transferId;

  /**
   * Free search field
   */
  @JsonProperty("externalReference")
  private JsonNullable<String> externalReference;

  @JsonIgnore
  public String getId() {
    return id.orElse(null);
  }

  @JsonIgnore
  public String getEndToEndIdentifier() {
    return endToEndIdentifier.orElse(null);
  }

  @JsonIgnore
  public PixTransactionGetResponsePixTransactionCashValueFinality getFinality() {
    return finality.orElse(null);
  }

  @JsonIgnore
  public Double getValue() {
    return value.orElse(null);
  }

  @JsonIgnore
  public Double getChangeValue() {
    return changeValue.orElse(null);
  }

  @JsonIgnore
  public Double getRefundedValue() {
    return refundedValue.orElse(null);
  }

  @JsonIgnore
  public String getEffectiveDate() {
    return effectiveDate.orElse(null);
  }

  @JsonIgnore
  public String getScheduledDate() {
    return scheduledDate.orElse(null);
  }

  @JsonIgnore
  public PixTransactionGetResponsePixTransactionStatus getStatus() {
    return status.orElse(null);
  }

  @JsonIgnore
  public PixTransactionGetResponsePixTransactionType getType() {
    return type.orElse(null);
  }

  @JsonIgnore
  public PixTransactionGetResponsePixTransactionOriginType getOriginType() {
    return originType.orElse(null);
  }

  @JsonIgnore
  public String getConciliationIdentifier() {
    return conciliationIdentifier.orElse(null);
  }

  @JsonIgnore
  public String getDescription() {
    return description.orElse(null);
  }

  @JsonIgnore
  public String getTransactionReceiptUrl() {
    return transactionReceiptUrl.orElse(null);
  }

  @JsonIgnore
  public String getRefusalReason() {
    return refusalReason.orElse(null);
  }

  @JsonIgnore
  public Boolean getCanBeCanceled() {
    return canBeCanceled.orElse(null);
  }

  @JsonIgnore
  public PixOriginalTransactionResponseDto getOriginalTransaction() {
    return originalTransaction.orElse(null);
  }

  @JsonIgnore
  public PixTransactionExternalAccountResponseDto getExternalAccount() {
    return externalAccount.orElse(null);
  }

  @JsonIgnore
  public PixTransactionQrCodeResponseDto getQrCode() {
    return qrCode.orElse(null);
  }

  @JsonIgnore
  public String getPayment() {
    return payment.orElse(null);
  }

  @JsonIgnore
  public Boolean getCanBeRefunded() {
    return canBeRefunded.orElse(null);
  }

  @JsonIgnore
  public String getRefundDisabledReason() {
    return refundDisabledReason.orElse(null);
  }

  @JsonIgnore
  public Double getChargedFeeValue() {
    return chargedFeeValue.orElse(null);
  }

  @JsonIgnore
  public String getDateCreated() {
    return dateCreated.orElse(null);
  }

  @JsonIgnore
  public String getAddressKey() {
    return addressKey.orElse(null);
  }

  @JsonIgnore
  public PixTransactionGetResponsePixAddressKeyType getAddressKeyType() {
    return addressKeyType.orElse(null);
  }

  @JsonIgnore
  public String getTransferId() {
    return transferId.orElse(null);
  }

  @JsonIgnore
  public String getExternalReference() {
    return externalReference.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class PixTransactionGetResponseDtoBuilder {

    private JsonNullable<String> id = JsonNullable.undefined();

    @JsonProperty("id")
    public PixTransactionGetResponseDtoBuilder id(String value) {
      this.id = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> endToEndIdentifier = JsonNullable.undefined();

    @JsonProperty("endToEndIdentifier")
    public PixTransactionGetResponseDtoBuilder endToEndIdentifier(String value) {
      this.endToEndIdentifier = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PixTransactionGetResponsePixTransactionCashValueFinality> finality = JsonNullable.undefined();

    @JsonProperty("finality")
    public PixTransactionGetResponseDtoBuilder finality(
      PixTransactionGetResponsePixTransactionCashValueFinality value
    ) {
      this.finality = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> value = JsonNullable.undefined();

    @JsonProperty("value")
    public PixTransactionGetResponseDtoBuilder value(Double value) {
      this.value = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> changeValue = JsonNullable.undefined();

    @JsonProperty("changeValue")
    public PixTransactionGetResponseDtoBuilder changeValue(Double value) {
      this.changeValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> refundedValue = JsonNullable.undefined();

    @JsonProperty("refundedValue")
    public PixTransactionGetResponseDtoBuilder refundedValue(Double value) {
      this.refundedValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> effectiveDate = JsonNullable.undefined();

    @JsonProperty("effectiveDate")
    public PixTransactionGetResponseDtoBuilder effectiveDate(String value) {
      this.effectiveDate = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> scheduledDate = JsonNullable.undefined();

    @JsonProperty("scheduledDate")
    public PixTransactionGetResponseDtoBuilder scheduledDate(String value) {
      this.scheduledDate = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PixTransactionGetResponsePixTransactionStatus> status = JsonNullable.undefined();

    @JsonProperty("status")
    public PixTransactionGetResponseDtoBuilder status(PixTransactionGetResponsePixTransactionStatus value) {
      this.status = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PixTransactionGetResponsePixTransactionType> type = JsonNullable.undefined();

    @JsonProperty("type")
    public PixTransactionGetResponseDtoBuilder type(PixTransactionGetResponsePixTransactionType value) {
      this.type = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PixTransactionGetResponsePixTransactionOriginType> originType = JsonNullable.undefined();

    @JsonProperty("originType")
    public PixTransactionGetResponseDtoBuilder originType(PixTransactionGetResponsePixTransactionOriginType value) {
      this.originType = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> conciliationIdentifier = JsonNullable.undefined();

    @JsonProperty("conciliationIdentifier")
    public PixTransactionGetResponseDtoBuilder conciliationIdentifier(String value) {
      this.conciliationIdentifier = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> description = JsonNullable.undefined();

    @JsonProperty("description")
    public PixTransactionGetResponseDtoBuilder description(String value) {
      this.description = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> transactionReceiptUrl = JsonNullable.undefined();

    @JsonProperty("transactionReceiptUrl")
    public PixTransactionGetResponseDtoBuilder transactionReceiptUrl(String value) {
      this.transactionReceiptUrl = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> refusalReason = JsonNullable.undefined();

    @JsonProperty("refusalReason")
    public PixTransactionGetResponseDtoBuilder refusalReason(String value) {
      this.refusalReason = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Boolean> canBeCanceled = JsonNullable.undefined();

    @JsonProperty("canBeCanceled")
    public PixTransactionGetResponseDtoBuilder canBeCanceled(Boolean value) {
      this.canBeCanceled = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PixOriginalTransactionResponseDto> originalTransaction = JsonNullable.undefined();

    @JsonProperty("originalTransaction")
    public PixTransactionGetResponseDtoBuilder originalTransaction(PixOriginalTransactionResponseDto value) {
      this.originalTransaction = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PixTransactionExternalAccountResponseDto> externalAccount = JsonNullable.undefined();

    @JsonProperty("externalAccount")
    public PixTransactionGetResponseDtoBuilder externalAccount(PixTransactionExternalAccountResponseDto value) {
      this.externalAccount = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PixTransactionQrCodeResponseDto> qrCode = JsonNullable.undefined();

    @JsonProperty("qrCode")
    public PixTransactionGetResponseDtoBuilder qrCode(PixTransactionQrCodeResponseDto value) {
      this.qrCode = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> payment = JsonNullable.undefined();

    @JsonProperty("payment")
    public PixTransactionGetResponseDtoBuilder payment(String value) {
      this.payment = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Boolean> canBeRefunded = JsonNullable.undefined();

    @JsonProperty("canBeRefunded")
    public PixTransactionGetResponseDtoBuilder canBeRefunded(Boolean value) {
      this.canBeRefunded = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> refundDisabledReason = JsonNullable.undefined();

    @JsonProperty("refundDisabledReason")
    public PixTransactionGetResponseDtoBuilder refundDisabledReason(String value) {
      this.refundDisabledReason = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> chargedFeeValue = JsonNullable.undefined();

    @JsonProperty("chargedFeeValue")
    public PixTransactionGetResponseDtoBuilder chargedFeeValue(Double value) {
      this.chargedFeeValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> dateCreated = JsonNullable.undefined();

    @JsonProperty("dateCreated")
    public PixTransactionGetResponseDtoBuilder dateCreated(String value) {
      this.dateCreated = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> addressKey = JsonNullable.undefined();

    @JsonProperty("addressKey")
    public PixTransactionGetResponseDtoBuilder addressKey(String value) {
      this.addressKey = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PixTransactionGetResponsePixAddressKeyType> addressKeyType = JsonNullable.undefined();

    @JsonProperty("addressKeyType")
    public PixTransactionGetResponseDtoBuilder addressKeyType(PixTransactionGetResponsePixAddressKeyType value) {
      this.addressKeyType = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> transferId = JsonNullable.undefined();

    @JsonProperty("transferId")
    public PixTransactionGetResponseDtoBuilder transferId(String value) {
      this.transferId = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> externalReference = JsonNullable.undefined();

    @JsonProperty("externalReference")
    public PixTransactionGetResponseDtoBuilder externalReference(String value) {
      this.externalReference = JsonNullable.of(value);
      return this;
    }
  }
}
