// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * Fees for Pix transfers
 */
@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class MyAccountGetAccountFeesTransferPixDto {

  /**
   * Fee for sending transfers via Pix
   */
  @JsonProperty("feeValue")
  private JsonNullable<Double> feeValue;

  /**
   * Promotional fee (If any)
   */
  @JsonProperty("discountValue")
  private JsonNullable<Double> discountValue;

  /**
   * Promotional fee expiration date (If any)
   */
  @JsonProperty("expirationDate")
  private JsonNullable<String> expirationDate;

  /**
   * Indicates whether the number of free monthly transactions considers Pix
   */
  @JsonProperty("consideredInMonthlyTransfersWithoutFee")
  private JsonNullable<Boolean> consideredInMonthlyTransfersWithoutFee;

  @JsonIgnore
  public Double getFeeValue() {
    return feeValue.orElse(null);
  }

  @JsonIgnore
  public Double getDiscountValue() {
    return discountValue.orElse(null);
  }

  @JsonIgnore
  public String getExpirationDate() {
    return expirationDate.orElse(null);
  }

  @JsonIgnore
  public Boolean getConsideredInMonthlyTransfersWithoutFee() {
    return consideredInMonthlyTransfersWithoutFee.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class MyAccountGetAccountFeesTransferPixDtoBuilder {

    private JsonNullable<Double> feeValue = JsonNullable.undefined();

    @JsonProperty("feeValue")
    public MyAccountGetAccountFeesTransferPixDtoBuilder feeValue(Double value) {
      this.feeValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> discountValue = JsonNullable.undefined();

    @JsonProperty("discountValue")
    public MyAccountGetAccountFeesTransferPixDtoBuilder discountValue(Double value) {
      this.discountValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> expirationDate = JsonNullable.undefined();

    @JsonProperty("expirationDate")
    public MyAccountGetAccountFeesTransferPixDtoBuilder expirationDate(String value) {
      this.expirationDate = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Boolean> consideredInMonthlyTransfersWithoutFee = JsonNullable.undefined();

    @JsonProperty("consideredInMonthlyTransfersWithoutFee")
    public MyAccountGetAccountFeesTransferPixDtoBuilder consideredInMonthlyTransfersWithoutFee(Boolean value) {
      this.consideredInMonthlyTransfersWithoutFee = JsonNullable.of(value);
      return this;
    }
  }
}
