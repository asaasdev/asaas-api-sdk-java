// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * Information about the receiver
 */
@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class PixQrCodeDecodeReceiverDto {

  /**
   * Financial institution code
   */
  @JsonProperty("ispb")
  private JsonNullable<String> ispb;

  /**
   * Name of the financial institution
   */
  @JsonProperty("ispbName")
  private JsonNullable<String> ispbName;

  /**
   * Receiver name
   */
  @JsonProperty("name")
  private JsonNullable<String> name;

  /**
   * Receiver's trade name
   */
  @JsonProperty("tradingName")
  private JsonNullable<String> tradingName;

  /**
   * CPF or CNPJ of the receiver
   */
  @JsonProperty("cpfCnpj")
  private JsonNullable<String> cpfCnpj;

  /**
   * Person type
   */
  @JsonProperty("personType")
  private JsonNullable<PixQrCodeDecodeReceiverPersonType> personType;

  /**
   * Receiver account type
   */
  @JsonProperty("accountType")
  private JsonNullable<PixQrCodeDecodeReceiverPixAccountType> accountType;

  @JsonIgnore
  public String getIspb() {
    return ispb.orElse(null);
  }

  @JsonIgnore
  public String getIspbName() {
    return ispbName.orElse(null);
  }

  @JsonIgnore
  public String getName() {
    return name.orElse(null);
  }

  @JsonIgnore
  public String getTradingName() {
    return tradingName.orElse(null);
  }

  @JsonIgnore
  public String getCpfCnpj() {
    return cpfCnpj.orElse(null);
  }

  @JsonIgnore
  public PixQrCodeDecodeReceiverPersonType getPersonType() {
    return personType.orElse(null);
  }

  @JsonIgnore
  public PixQrCodeDecodeReceiverPixAccountType getAccountType() {
    return accountType.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class PixQrCodeDecodeReceiverDtoBuilder {

    private JsonNullable<String> ispb = JsonNullable.undefined();

    @JsonProperty("ispb")
    public PixQrCodeDecodeReceiverDtoBuilder ispb(String value) {
      this.ispb = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> ispbName = JsonNullable.undefined();

    @JsonProperty("ispbName")
    public PixQrCodeDecodeReceiverDtoBuilder ispbName(String value) {
      this.ispbName = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> name = JsonNullable.undefined();

    @JsonProperty("name")
    public PixQrCodeDecodeReceiverDtoBuilder name(String value) {
      this.name = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> tradingName = JsonNullable.undefined();

    @JsonProperty("tradingName")
    public PixQrCodeDecodeReceiverDtoBuilder tradingName(String value) {
      this.tradingName = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> cpfCnpj = JsonNullable.undefined();

    @JsonProperty("cpfCnpj")
    public PixQrCodeDecodeReceiverDtoBuilder cpfCnpj(String value) {
      this.cpfCnpj = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PixQrCodeDecodeReceiverPersonType> personType = JsonNullable.undefined();

    @JsonProperty("personType")
    public PixQrCodeDecodeReceiverDtoBuilder personType(PixQrCodeDecodeReceiverPersonType value) {
      this.personType = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PixQrCodeDecodeReceiverPixAccountType> accountType = JsonNullable.undefined();

    @JsonProperty("accountType")
    public PixQrCodeDecodeReceiverDtoBuilder accountType(PixQrCodeDecodeReceiverPixAccountType value) {
      this.accountType = JsonNullable.of(value);
      return this;
    }
  }
}
