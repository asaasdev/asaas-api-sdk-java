// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiPaymentSimulateInstallmentResponseDto {

  /**
   * Net value
   */
  @JsonProperty("paymentNetValue")
  private JsonNullable<Double> paymentNetValue;

  /**
   * Total value
   */
  @JsonProperty("paymentValue")
  private JsonNullable<Double> paymentValue;

  @JsonIgnore
  public Double getPaymentNetValue() {
    return paymentNetValue.orElse(null);
  }

  @JsonIgnore
  public Double getPaymentValue() {
    return paymentValue.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiPaymentSimulateInstallmentResponseDtoBuilder {

    private JsonNullable<Double> paymentNetValue = JsonNullable.undefined();

    @JsonProperty("paymentNetValue")
    public ApiPaymentSimulateInstallmentResponseDtoBuilder paymentNetValue(Double value) {
      if (value == null) {
        throw new IllegalStateException("paymentNetValue cannot be null");
      }
      this.paymentNetValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> paymentValue = JsonNullable.undefined();

    @JsonProperty("paymentValue")
    public ApiPaymentSimulateInstallmentResponseDtoBuilder paymentValue(Double value) {
      if (value == null) {
        throw new IllegalStateException("paymentValue cannot be null");
      }
      this.paymentValue = JsonNullable.of(value);
      return this;
    }
  }
}
