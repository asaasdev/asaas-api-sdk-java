// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiPaymentSplitGetResponseDto {

  /**
   * Unique split identifier in Asaas
   */
  @JsonProperty("id")
  private JsonNullable<String> id;

  /**
   * Asaas wallet identifier that will be transferred
   */
  @JsonProperty("walletId")
  private JsonNullable<String> walletId;

  /**
   * Fixed amount to be transferred to the account when the charge is received
   */
  @JsonProperty("fixedValue")
  private JsonNullable<Double> fixedValue;

  /**
   * Percentage of the net value of the charge to be transferred when received
   */
  @JsonProperty("percentualValue")
  private JsonNullable<Double> percentualValue;

  /**
   * Amount that will be split relative to the total amount that will be paid
   */
  @JsonProperty("totalValue")
  private JsonNullable<Double> totalValue;

  /**
   * Reason for canceling the split
   */
  @JsonProperty("cancellationReason")
  private JsonNullable<ApiPaymentSplitGetResponsePaymentSplitCancellationReason> cancellationReason;

  /**
   * Split status
   */
  @JsonProperty("status")
  private JsonNullable<ApiPaymentSplitGetResponsePaymentSplitStatus> status;

  /**
   * Unique identifier of split in your system
   */
  @JsonProperty("externalReference")
  private JsonNullable<String> externalReference;

  /**
   * Split description
   */
  @JsonProperty("description")
  private JsonNullable<String> description;

  @JsonIgnore
  public String getId() {
    return id.orElse(null);
  }

  @JsonIgnore
  public String getWalletId() {
    return walletId.orElse(null);
  }

  @JsonIgnore
  public Double getFixedValue() {
    return fixedValue.orElse(null);
  }

  @JsonIgnore
  public Double getPercentualValue() {
    return percentualValue.orElse(null);
  }

  @JsonIgnore
  public Double getTotalValue() {
    return totalValue.orElse(null);
  }

  @JsonIgnore
  public ApiPaymentSplitGetResponsePaymentSplitCancellationReason getCancellationReason() {
    return cancellationReason.orElse(null);
  }

  @JsonIgnore
  public ApiPaymentSplitGetResponsePaymentSplitStatus getStatus() {
    return status.orElse(null);
  }

  @JsonIgnore
  public String getExternalReference() {
    return externalReference.orElse(null);
  }

  @JsonIgnore
  public String getDescription() {
    return description.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiPaymentSplitGetResponseDtoBuilder {

    private JsonNullable<String> id = JsonNullable.undefined();

    @JsonProperty("id")
    public ApiPaymentSplitGetResponseDtoBuilder id(String value) {
      this.id = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> walletId = JsonNullable.undefined();

    @JsonProperty("walletId")
    public ApiPaymentSplitGetResponseDtoBuilder walletId(String value) {
      this.walletId = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> fixedValue = JsonNullable.undefined();

    @JsonProperty("fixedValue")
    public ApiPaymentSplitGetResponseDtoBuilder fixedValue(Double value) {
      this.fixedValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> percentualValue = JsonNullable.undefined();

    @JsonProperty("percentualValue")
    public ApiPaymentSplitGetResponseDtoBuilder percentualValue(Double value) {
      this.percentualValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> totalValue = JsonNullable.undefined();

    @JsonProperty("totalValue")
    public ApiPaymentSplitGetResponseDtoBuilder totalValue(Double value) {
      this.totalValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiPaymentSplitGetResponsePaymentSplitCancellationReason> cancellationReason =
      JsonNullable.undefined();

    @JsonProperty("cancellationReason")
    public ApiPaymentSplitGetResponseDtoBuilder cancellationReason(
      ApiPaymentSplitGetResponsePaymentSplitCancellationReason value
    ) {
      this.cancellationReason = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiPaymentSplitGetResponsePaymentSplitStatus> status = JsonNullable.undefined();

    @JsonProperty("status")
    public ApiPaymentSplitGetResponseDtoBuilder status(ApiPaymentSplitGetResponsePaymentSplitStatus value) {
      this.status = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> externalReference = JsonNullable.undefined();

    @JsonProperty("externalReference")
    public ApiPaymentSplitGetResponseDtoBuilder externalReference(String value) {
      this.externalReference = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> description = JsonNullable.undefined();

    @JsonProperty("description")
    public ApiPaymentSplitGetResponseDtoBuilder description(String value) {
      this.description = JsonNullable.of(value);
      return this;
    }
  }
}
