// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * Information about QrCode
 */
@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class PixTransactionQrCodeResponseDto {

  /**
   * Information about the payer
   */
  @JsonProperty("payer")
  private JsonNullable<PixTransactionQrCodePayerResponseDto> payer;

  /**
   * Unique Pix reconciliation identifier with Asaas
   */
  @JsonProperty("conciliationIdentifier")
  private JsonNullable<String> conciliationIdentifier;

  /**
   * Original transaction value
   */
  @JsonProperty("originalValue")
  private JsonNullable<Double> originalValue;

  /**
   * Due date
   */
  @JsonProperty("dueDate")
  private JsonNullable<String> dueDate;

  /**
   * Interest value
   */
  @JsonProperty("interest")
  private JsonNullable<Double> interest;

  /**
   * Fine value
   */
  @JsonProperty("fine")
  private JsonNullable<Double> fine;

  /**
   * Discount amount
   */
  @JsonProperty("discount")
  private JsonNullable<Double> discount;

  /**
   * Expiration date
   */
  @JsonProperty("expirationDate")
  private JsonNullable<String> expirationDate;

  @JsonIgnore
  public PixTransactionQrCodePayerResponseDto getPayer() {
    return payer.orElse(null);
  }

  @JsonIgnore
  public String getConciliationIdentifier() {
    return conciliationIdentifier.orElse(null);
  }

  @JsonIgnore
  public Double getOriginalValue() {
    return originalValue.orElse(null);
  }

  @JsonIgnore
  public String getDueDate() {
    return dueDate.orElse(null);
  }

  @JsonIgnore
  public Double getInterest() {
    return interest.orElse(null);
  }

  @JsonIgnore
  public Double getFine() {
    return fine.orElse(null);
  }

  @JsonIgnore
  public Double getDiscount() {
    return discount.orElse(null);
  }

  @JsonIgnore
  public String getExpirationDate() {
    return expirationDate.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class PixTransactionQrCodeResponseDtoBuilder {

    private JsonNullable<PixTransactionQrCodePayerResponseDto> payer = JsonNullable.undefined();

    @JsonProperty("payer")
    public PixTransactionQrCodeResponseDtoBuilder payer(PixTransactionQrCodePayerResponseDto value) {
      this.payer = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> conciliationIdentifier = JsonNullable.undefined();

    @JsonProperty("conciliationIdentifier")
    public PixTransactionQrCodeResponseDtoBuilder conciliationIdentifier(String value) {
      this.conciliationIdentifier = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> originalValue = JsonNullable.undefined();

    @JsonProperty("originalValue")
    public PixTransactionQrCodeResponseDtoBuilder originalValue(Double value) {
      this.originalValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> dueDate = JsonNullable.undefined();

    @JsonProperty("dueDate")
    public PixTransactionQrCodeResponseDtoBuilder dueDate(String value) {
      this.dueDate = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> interest = JsonNullable.undefined();

    @JsonProperty("interest")
    public PixTransactionQrCodeResponseDtoBuilder interest(Double value) {
      this.interest = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> fine = JsonNullable.undefined();

    @JsonProperty("fine")
    public PixTransactionQrCodeResponseDtoBuilder fine(Double value) {
      this.fine = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> discount = JsonNullable.undefined();

    @JsonProperty("discount")
    public PixTransactionQrCodeResponseDtoBuilder discount(Double value) {
      this.discount = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> expirationDate = JsonNullable.undefined();

    @JsonProperty("expirationDate")
    public PixTransactionQrCodeResponseDtoBuilder expirationDate(String value) {
      this.expirationDate = JsonNullable.of(value);
      return this;
    }
  }
}
