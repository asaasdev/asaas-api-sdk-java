// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiPaymentFineRequestDto {

  /**
   * Percentage of fine on the amount of the charge for payment after the due date
   */
  @JsonProperty("value")
  private JsonNullable<Double> value;

  /**
   * Fine type
   */
  @JsonProperty("type")
  private JsonNullable<ApiPaymentFineRequestFineType> type;

  @JsonIgnore
  public Double getValue() {
    return value.orElse(null);
  }

  @JsonIgnore
  public ApiPaymentFineRequestFineType getType() {
    return type.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiPaymentFineRequestDtoBuilder {

    private JsonNullable<Double> value = JsonNullable.undefined();

    @JsonProperty("value")
    public ApiPaymentFineRequestDtoBuilder value(Double value) {
      if (value == null) {
        throw new IllegalStateException("value cannot be null");
      }
      this.value = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiPaymentFineRequestFineType> type = JsonNullable.undefined();

    @JsonProperty("type")
    public ApiPaymentFineRequestDtoBuilder type(ApiPaymentFineRequestFineType value) {
      if (value == null) {
        throw new IllegalStateException("type cannot be null");
      }
      this.type = JsonNullable.of(value);
      return this;
    }
  }
}
