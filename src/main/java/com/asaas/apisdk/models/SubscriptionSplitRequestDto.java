// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * Split information
 */
@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class SubscriptionSplitRequestDto {

  /**
   * Asaas wallet identifier that will be transferred
   */
  @NonNull
  private String walletId;

  /**
   * Fixed amount to be transferred to the account when the payment is received
   */
  @JsonProperty("fixedValue")
  private JsonNullable<Double> fixedValue;

  /**
   * Percentage of the net value of the charge to be transferred when received
   */
  @JsonProperty("percentualValue")
  private JsonNullable<Double> percentualValue;

  /**
   * Split identifier in your system
   */
  @JsonProperty("externalReference")
  private JsonNullable<String> externalReference;

  /**
   * Split description
   */
  @JsonProperty("description")
  private JsonNullable<String> description;

  @JsonIgnore
  public Double getFixedValue() {
    return fixedValue.orElse(null);
  }

  @JsonIgnore
  public Double getPercentualValue() {
    return percentualValue.orElse(null);
  }

  @JsonIgnore
  public String getExternalReference() {
    return externalReference.orElse(null);
  }

  @JsonIgnore
  public String getDescription() {
    return description.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class SubscriptionSplitRequestDtoBuilder {

    private JsonNullable<Double> fixedValue = JsonNullable.undefined();

    @JsonProperty("fixedValue")
    public SubscriptionSplitRequestDtoBuilder fixedValue(Double value) {
      this.fixedValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> percentualValue = JsonNullable.undefined();

    @JsonProperty("percentualValue")
    public SubscriptionSplitRequestDtoBuilder percentualValue(Double value) {
      this.percentualValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> externalReference = JsonNullable.undefined();

    @JsonProperty("externalReference")
    public SubscriptionSplitRequestDtoBuilder externalReference(String value) {
      this.externalReference = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> description = JsonNullable.undefined();

    @JsonProperty("description")
    public SubscriptionSplitRequestDtoBuilder description(String value) {
      this.description = JsonNullable.of(value);
      return this;
    }
  }
}
