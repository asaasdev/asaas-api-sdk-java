// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiPaymentSimulateResponseDto {

  /**
   * Total installment or billing amount
   */
  @JsonProperty("value")
  private JsonNullable<Double> value;

  @JsonProperty("creditCard")
  private JsonNullable<ApiPaymentSimulateCreditCardResponseDto> creditCard;

  @JsonProperty("bankSlip")
  private JsonNullable<ApiPaymentSimulateBankSlipResponseDto> bankSlip;

  @JsonProperty("pix")
  private JsonNullable<ApiPaymentSimulatePixResponseDto> pix;

  @JsonIgnore
  public Double getValue() {
    return value.orElse(null);
  }

  @JsonIgnore
  public ApiPaymentSimulateCreditCardResponseDto getCreditCard() {
    return creditCard.orElse(null);
  }

  @JsonIgnore
  public ApiPaymentSimulateBankSlipResponseDto getBankSlip() {
    return bankSlip.orElse(null);
  }

  @JsonIgnore
  public ApiPaymentSimulatePixResponseDto getPix() {
    return pix.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiPaymentSimulateResponseDtoBuilder {

    private JsonNullable<Double> value = JsonNullable.undefined();

    @JsonProperty("value")
    public ApiPaymentSimulateResponseDtoBuilder value(Double value) {
      if (value == null) {
        throw new IllegalStateException("value cannot be null");
      }
      this.value = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiPaymentSimulateCreditCardResponseDto> creditCard = JsonNullable.undefined();

    @JsonProperty("creditCard")
    public ApiPaymentSimulateResponseDtoBuilder creditCard(ApiPaymentSimulateCreditCardResponseDto value) {
      if (value == null) {
        throw new IllegalStateException("creditCard cannot be null");
      }
      this.creditCard = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiPaymentSimulateBankSlipResponseDto> bankSlip = JsonNullable.undefined();

    @JsonProperty("bankSlip")
    public ApiPaymentSimulateResponseDtoBuilder bankSlip(ApiPaymentSimulateBankSlipResponseDto value) {
      if (value == null) {
        throw new IllegalStateException("bankSlip cannot be null");
      }
      this.bankSlip = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiPaymentSimulatePixResponseDto> pix = JsonNullable.undefined();

    @JsonProperty("pix")
    public ApiPaymentSimulateResponseDtoBuilder pix(ApiPaymentSimulatePixResponseDto value) {
      if (value == null) {
        throw new IllegalStateException("pix cannot be null");
      }
      this.pix = JsonNullable.of(value);
      return this;
    }
  }
}
