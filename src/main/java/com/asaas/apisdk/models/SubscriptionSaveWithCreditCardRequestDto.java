// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import java.util.List;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class SubscriptionSaveWithCreditCardRequestDto {

  /**
   * Unique customer identifier in Asaas
   */
  @NonNull
  private String customer;

  /**
   * Billing type
   */
  @NonNull
  private SubscriptionSaveWithCreditCardRequestBillingType billingType;

  /**
   * Subscription value
   */
  @NonNull
  private Double value;

  /**
   * First payment due
   */
  @NonNull
  private String nextDueDate;

  /**
   * Billing frequency
   */
  @NonNull
  private SubscriptionSaveWithCreditCardRequestCycle cycle;

  /**
   * Credit card information
   */
  @NonNull
  private CreditCardRequestDto creditCard;

  /**
   * Credit card holder information
   */
  @NonNull
  private CreditCardHolderInfoRequestDto creditCardHolderInfo;

  /**
   * IP from where the customer is making the purchase. Your server's IP must not be entered.
   */
  @NonNull
  private String remoteIp;

  /**
   * Discount information
   */
  @JsonProperty("discount")
  private JsonNullable<PaymentDiscountDto> discount;

  /**
   * Interest information for payment after due date
   */
  @JsonProperty("interest")
  private JsonNullable<PaymentInterestRequestDto> interest;

  /**
   * Fine information for payment after due date
   */
  @JsonProperty("fine")
  private JsonNullable<PaymentFineRequestDto> fine;

  /**
   * Subscription description (max. 500 characters)
   */
  @JsonProperty("description")
  private JsonNullable<String> description;

  /**
   * Deadline for payments to be due
   */
  @JsonProperty("endDate")
  private JsonNullable<String> endDate;

  /**
   * Maximum number of payments to be generated for this subscription
   */
  @JsonProperty("maxPayments")
  private JsonNullable<Long> maxPayments;

  /**
   * Subscription identifier on your system
   */
  @JsonProperty("externalReference")
  private JsonNullable<String> externalReference;

  /**
   * Split information
   */
  @JsonProperty("split")
  private JsonNullable<List<SubscriptionSplitRequestDto>> split;

  /**
   * Automatic redirection information after the payment of the link payment
   */
  @JsonProperty("callback")
  private JsonNullable<PaymentCallbackRequestDto> callback;

  /**
   * Credit card token for using the credit card tokenization functionality. If informed, the fields above are not mandatory.
   */
  @JsonProperty("creditCardToken")
  private JsonNullable<String> creditCardToken;

  @JsonIgnore
  public PaymentDiscountDto getDiscount() {
    return discount.orElse(null);
  }

  @JsonIgnore
  public PaymentInterestRequestDto getInterest() {
    return interest.orElse(null);
  }

  @JsonIgnore
  public PaymentFineRequestDto getFine() {
    return fine.orElse(null);
  }

  @JsonIgnore
  public String getDescription() {
    return description.orElse(null);
  }

  @JsonIgnore
  public String getEndDate() {
    return endDate.orElse(null);
  }

  @JsonIgnore
  public Long getMaxPayments() {
    return maxPayments.orElse(null);
  }

  @JsonIgnore
  public String getExternalReference() {
    return externalReference.orElse(null);
  }

  @JsonIgnore
  public List<SubscriptionSplitRequestDto> getSplit() {
    return split.orElse(null);
  }

  @JsonIgnore
  public PaymentCallbackRequestDto getCallback() {
    return callback.orElse(null);
  }

  @JsonIgnore
  public String getCreditCardToken() {
    return creditCardToken.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class SubscriptionSaveWithCreditCardRequestDtoBuilder {

    private JsonNullable<PaymentDiscountDto> discount = JsonNullable.undefined();

    @JsonProperty("discount")
    public SubscriptionSaveWithCreditCardRequestDtoBuilder discount(PaymentDiscountDto value) {
      this.discount = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PaymentInterestRequestDto> interest = JsonNullable.undefined();

    @JsonProperty("interest")
    public SubscriptionSaveWithCreditCardRequestDtoBuilder interest(PaymentInterestRequestDto value) {
      this.interest = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PaymentFineRequestDto> fine = JsonNullable.undefined();

    @JsonProperty("fine")
    public SubscriptionSaveWithCreditCardRequestDtoBuilder fine(PaymentFineRequestDto value) {
      this.fine = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> description = JsonNullable.undefined();

    @JsonProperty("description")
    public SubscriptionSaveWithCreditCardRequestDtoBuilder description(String value) {
      this.description = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> endDate = JsonNullable.undefined();

    @JsonProperty("endDate")
    public SubscriptionSaveWithCreditCardRequestDtoBuilder endDate(String value) {
      this.endDate = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Long> maxPayments = JsonNullable.undefined();

    @JsonProperty("maxPayments")
    public SubscriptionSaveWithCreditCardRequestDtoBuilder maxPayments(Long value) {
      this.maxPayments = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> externalReference = JsonNullable.undefined();

    @JsonProperty("externalReference")
    public SubscriptionSaveWithCreditCardRequestDtoBuilder externalReference(String value) {
      this.externalReference = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<List<SubscriptionSplitRequestDto>> split = JsonNullable.undefined();

    @JsonProperty("split")
    public SubscriptionSaveWithCreditCardRequestDtoBuilder split(List<SubscriptionSplitRequestDto> value) {
      this.split = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<PaymentCallbackRequestDto> callback = JsonNullable.undefined();

    @JsonProperty("callback")
    public SubscriptionSaveWithCreditCardRequestDtoBuilder callback(PaymentCallbackRequestDto value) {
      this.callback = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> creditCardToken = JsonNullable.undefined();

    @JsonProperty("creditCardToken")
    public SubscriptionSaveWithCreditCardRequestDtoBuilder creditCardToken(String value) {
      this.creditCardToken = JsonNullable.of(value);
      return this;
    }
  }
}
