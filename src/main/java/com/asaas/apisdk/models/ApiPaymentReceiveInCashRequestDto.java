// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiPaymentReceiveInCashRequestDto {

  /**
   * Date the customer made the payment
   */
  @JsonProperty("paymentDate")
  private JsonNullable<String> paymentDate;

  /**
   * Amount paid by the customer
   */
  @JsonProperty("value")
  private JsonNullable<Double> value;

  /**
   * Send or not send notification of confirmed payment to the customer
   */
  @JsonProperty("notifyCustomer")
  private JsonNullable<Boolean> notifyCustomer;

  @JsonIgnore
  public String getPaymentDate() {
    return paymentDate.orElse(null);
  }

  @JsonIgnore
  public Double getValue() {
    return value.orElse(null);
  }

  @JsonIgnore
  public Boolean getNotifyCustomer() {
    return notifyCustomer.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiPaymentReceiveInCashRequestDtoBuilder {

    private JsonNullable<String> paymentDate = JsonNullable.undefined();

    @JsonProperty("paymentDate")
    public ApiPaymentReceiveInCashRequestDtoBuilder paymentDate(String value) {
      this.paymentDate = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> value = JsonNullable.undefined();

    @JsonProperty("value")
    public ApiPaymentReceiveInCashRequestDtoBuilder value(Double value) {
      this.value = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Boolean> notifyCustomer = JsonNullable.undefined();

    @JsonProperty("notifyCustomer")
    public ApiPaymentReceiveInCashRequestDtoBuilder notifyCustomer(Boolean value) {
      this.notifyCustomer = JsonNullable.of(value);
      return this;
    }
  }
}
