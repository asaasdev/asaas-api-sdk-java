// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class ApiSubscriptionSplitResponseDto {

  /**
   * Asaas wallet identifier that will be transferred
   */
  @JsonProperty("walletId")
  private JsonNullable<String> walletId;

  /**
   * Fixed amount to be transferred to the account when the payment is received
   */
  @JsonProperty("fixedValue")
  private JsonNullable<Double> fixedValue;

  /**
   * Percentage of the net value of the charge to be transferred when received
   */
  @JsonProperty("percentualValue")
  private JsonNullable<Double> percentualValue;

  /**
   * Split identifier in your system
   */
  @JsonProperty("externalReference")
  private JsonNullable<String> externalReference;

  /**
   * Split description
   */
  @JsonProperty("description")
  private JsonNullable<String> description;

  /**
   * Subscription split status
   */
  @JsonProperty("status")
  private JsonNullable<ApiSubscriptionSplitResponseSubscriptionSplitStatus> status;

  /**
   * Reason why subscription split was disabled
   */
  @JsonProperty("disabledReason")
  private JsonNullable<ApiSubscriptionSplitResponseSubscriptionSplitDisabledReason> disabledReason;

  @JsonIgnore
  public String getWalletId() {
    return walletId.orElse(null);
  }

  @JsonIgnore
  public Double getFixedValue() {
    return fixedValue.orElse(null);
  }

  @JsonIgnore
  public Double getPercentualValue() {
    return percentualValue.orElse(null);
  }

  @JsonIgnore
  public String getExternalReference() {
    return externalReference.orElse(null);
  }

  @JsonIgnore
  public String getDescription() {
    return description.orElse(null);
  }

  @JsonIgnore
  public ApiSubscriptionSplitResponseSubscriptionSplitStatus getStatus() {
    return status.orElse(null);
  }

  @JsonIgnore
  public ApiSubscriptionSplitResponseSubscriptionSplitDisabledReason getDisabledReason() {
    return disabledReason.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class ApiSubscriptionSplitResponseDtoBuilder {

    private JsonNullable<String> walletId = JsonNullable.undefined();

    @JsonProperty("walletId")
    public ApiSubscriptionSplitResponseDtoBuilder walletId(String value) {
      this.walletId = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> fixedValue = JsonNullable.undefined();

    @JsonProperty("fixedValue")
    public ApiSubscriptionSplitResponseDtoBuilder fixedValue(Double value) {
      this.fixedValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<Double> percentualValue = JsonNullable.undefined();

    @JsonProperty("percentualValue")
    public ApiSubscriptionSplitResponseDtoBuilder percentualValue(Double value) {
      this.percentualValue = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> externalReference = JsonNullable.undefined();

    @JsonProperty("externalReference")
    public ApiSubscriptionSplitResponseDtoBuilder externalReference(String value) {
      this.externalReference = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> description = JsonNullable.undefined();

    @JsonProperty("description")
    public ApiSubscriptionSplitResponseDtoBuilder description(String value) {
      this.description = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiSubscriptionSplitResponseSubscriptionSplitStatus> status = JsonNullable.undefined();

    @JsonProperty("status")
    public ApiSubscriptionSplitResponseDtoBuilder status(ApiSubscriptionSplitResponseSubscriptionSplitStatus value) {
      this.status = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<ApiSubscriptionSplitResponseSubscriptionSplitDisabledReason> disabledReason =
      JsonNullable.undefined();

    @JsonProperty("disabledReason")
    public ApiSubscriptionSplitResponseDtoBuilder disabledReason(
      ApiSubscriptionSplitResponseSubscriptionSplitDisabledReason value
    ) {
      this.disabledReason = JsonNullable.of(value);
      return this;
    }
  }
}
