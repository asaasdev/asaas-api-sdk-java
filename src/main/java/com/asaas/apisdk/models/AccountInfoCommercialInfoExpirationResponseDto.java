// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * Information about the expiration of commercial data
 */
@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class AccountInfoCommercialInfoExpirationResponseDto {

  /**
   * Informs if commercial data is expired
   */
  @JsonProperty("isExpired")
  private JsonNullable<Boolean> isExpired;

  /**
   * Informs the expiration date of commercial data
   */
  @JsonProperty("scheduledDate")
  private JsonNullable<String> scheduledDate;

  @JsonIgnore
  public Boolean getIsExpired() {
    return isExpired.orElse(null);
  }

  @JsonIgnore
  public String getScheduledDate() {
    return scheduledDate.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class AccountInfoCommercialInfoExpirationResponseDtoBuilder {

    private JsonNullable<Boolean> isExpired = JsonNullable.undefined();

    @JsonProperty("isExpired")
    public AccountInfoCommercialInfoExpirationResponseDtoBuilder isExpired(Boolean value) {
      this.isExpired = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> scheduledDate = JsonNullable.undefined();

    @JsonProperty("scheduledDate")
    public AccountInfoCommercialInfoExpirationResponseDtoBuilder scheduledDate(String value) {
      this.scheduledDate = JsonNullable.of(value);
      return this;
    }
  }
}
