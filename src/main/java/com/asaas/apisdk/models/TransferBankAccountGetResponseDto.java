// This file was generated by liblab | https://liblab.com/

package com.asaas.apisdk.models;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;
import org.openapitools.jackson.nullable.JsonNullable;

/**
 * Bank account details
 */
@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class TransferBankAccountGetResponseDto {

  /**
   * Bank account name
   */
  @JsonProperty("bank")
  private JsonNullable<TransferBankGetResponseDto> bank;

  /**
   * Name of bank account owner
   */
  @JsonProperty("accountName")
  private JsonNullable<String> accountName;

  /**
   * Name of bank account owner
   */
  @JsonProperty("ownerName")
  private JsonNullable<String> ownerName;

  /**
   * CPF or CNPJ of the bank account owner
   */
  @JsonProperty("cpfCnpj")
  private JsonNullable<String> cpfCnpj;

  /**
   * Non-digit agency number
   */
  @JsonProperty("agency")
  private JsonNullable<String> agency;

  /**
   * Agency digit
   */
  @JsonProperty("agencyDigit")
  private JsonNullable<String> agencyDigit;

  /**
   * Non-digit bank account number
   */
  @JsonProperty("account")
  private JsonNullable<String> account;

  /**
   * Bank account digit
   */
  @JsonProperty("accountDigit")
  private JsonNullable<String> accountDigit;

  /**
   * Pix key address
   */
  @JsonProperty("pixAddressKey")
  private JsonNullable<String> pixAddressKey;

  @JsonIgnore
  public TransferBankGetResponseDto getBank() {
    return bank.orElse(null);
  }

  @JsonIgnore
  public String getAccountName() {
    return accountName.orElse(null);
  }

  @JsonIgnore
  public String getOwnerName() {
    return ownerName.orElse(null);
  }

  @JsonIgnore
  public String getCpfCnpj() {
    return cpfCnpj.orElse(null);
  }

  @JsonIgnore
  public String getAgency() {
    return agency.orElse(null);
  }

  @JsonIgnore
  public String getAgencyDigit() {
    return agencyDigit.orElse(null);
  }

  @JsonIgnore
  public String getAccount() {
    return account.orElse(null);
  }

  @JsonIgnore
  public String getAccountDigit() {
    return accountDigit.orElse(null);
  }

  @JsonIgnore
  public String getPixAddressKey() {
    return pixAddressKey.orElse(null);
  }

  // Overwrite lombok builder methods
  public static class TransferBankAccountGetResponseDtoBuilder {

    private JsonNullable<TransferBankGetResponseDto> bank = JsonNullable.undefined();

    @JsonProperty("bank")
    public TransferBankAccountGetResponseDtoBuilder bank(TransferBankGetResponseDto value) {
      this.bank = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> accountName = JsonNullable.undefined();

    @JsonProperty("accountName")
    public TransferBankAccountGetResponseDtoBuilder accountName(String value) {
      this.accountName = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> ownerName = JsonNullable.undefined();

    @JsonProperty("ownerName")
    public TransferBankAccountGetResponseDtoBuilder ownerName(String value) {
      this.ownerName = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> cpfCnpj = JsonNullable.undefined();

    @JsonProperty("cpfCnpj")
    public TransferBankAccountGetResponseDtoBuilder cpfCnpj(String value) {
      this.cpfCnpj = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> agency = JsonNullable.undefined();

    @JsonProperty("agency")
    public TransferBankAccountGetResponseDtoBuilder agency(String value) {
      this.agency = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> agencyDigit = JsonNullable.undefined();

    @JsonProperty("agencyDigit")
    public TransferBankAccountGetResponseDtoBuilder agencyDigit(String value) {
      this.agencyDigit = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> account = JsonNullable.undefined();

    @JsonProperty("account")
    public TransferBankAccountGetResponseDtoBuilder account(String value) {
      this.account = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> accountDigit = JsonNullable.undefined();

    @JsonProperty("accountDigit")
    public TransferBankAccountGetResponseDtoBuilder accountDigit(String value) {
      this.accountDigit = JsonNullable.of(value);
      return this;
    }

    private JsonNullable<String> pixAddressKey = JsonNullable.undefined();

    @JsonProperty("pixAddressKey")
    public TransferBankAccountGetResponseDtoBuilder pixAddressKey(String value) {
      this.pixAddressKey = JsonNullable.of(value);
      return this;
    }
  }
}
