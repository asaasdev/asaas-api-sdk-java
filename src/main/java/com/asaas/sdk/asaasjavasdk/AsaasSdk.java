// This file was generated by liblab | https://liblab.com/

package com.asaas.sdk.asaasjavasdk;

import com.asaas.sdk.asaasjavasdk.config.ApiKeyAuthConfig;
import com.asaas.sdk.asaasjavasdk.config.AsaasSdkConfig;
import com.asaas.sdk.asaasjavasdk.http.Environment;
import com.asaas.sdk.asaasjavasdk.http.interceptors.DefaultHeadersInterceptor;
import com.asaas.sdk.asaasjavasdk.http.interceptors.RetryInterceptor;
import com.asaas.sdk.asaasjavasdk.services.AccountDocumentService;
import com.asaas.sdk.asaasjavasdk.services.AccountInfoService;
import com.asaas.sdk.asaasjavasdk.services.AnticipationService;
import com.asaas.sdk.asaasjavasdk.services.BillService;
import com.asaas.sdk.asaasjavasdk.services.ChargebackService;
import com.asaas.sdk.asaasjavasdk.services.CheckoutService;
import com.asaas.sdk.asaasjavasdk.services.CreditBureauReportService;
import com.asaas.sdk.asaasjavasdk.services.CreditCardService;
import com.asaas.sdk.asaasjavasdk.services.CustomerService;
import com.asaas.sdk.asaasjavasdk.services.EscrowAccountService;
import com.asaas.sdk.asaasjavasdk.services.FinanceService;
import com.asaas.sdk.asaasjavasdk.services.FinancialTransactionService;
import com.asaas.sdk.asaasjavasdk.services.FiscalInfoService;
import com.asaas.sdk.asaasjavasdk.services.InstallmentService;
import com.asaas.sdk.asaasjavasdk.services.InvoiceService;
import com.asaas.sdk.asaasjavasdk.services.MobilePhoneRechargeService;
import com.asaas.sdk.asaasjavasdk.services.NotificationService;
import com.asaas.sdk.asaasjavasdk.services.PaymentDocumentService;
import com.asaas.sdk.asaasjavasdk.services.PaymentDunningService;
import com.asaas.sdk.asaasjavasdk.services.PaymentLinkService;
import com.asaas.sdk.asaasjavasdk.services.PaymentRefundService;
import com.asaas.sdk.asaasjavasdk.services.PaymentService;
import com.asaas.sdk.asaasjavasdk.services.PaymentSplitService;
import com.asaas.sdk.asaasjavasdk.services.PaymentWithSummaryDataService;
import com.asaas.sdk.asaasjavasdk.services.PixService;
import com.asaas.sdk.asaasjavasdk.services.PixTransactionService;
import com.asaas.sdk.asaasjavasdk.services.RecurringPixService;
import com.asaas.sdk.asaasjavasdk.services.SandboxActionsService;
import com.asaas.sdk.asaasjavasdk.services.SubaccountService;
import com.asaas.sdk.asaasjavasdk.services.SubscriptionService;
import com.asaas.sdk.asaasjavasdk.services.TransferService;
import com.asaas.sdk.asaasjavasdk.services.WebhookService;
import java.util.concurrent.TimeUnit;
import okhttp3.OkHttpClient;

/** API pública de integração com a plataforma Asaas. */
public class AsaasSdk {

  public final PaymentService payment;
  public final SandboxActionsService sandboxActions;
  public final PaymentWithSummaryDataService paymentWithSummaryData;
  public final CreditCardService creditCard;
  public final PaymentRefundService paymentRefund;
  public final PaymentSplitService paymentSplit;
  public final EscrowAccountService escrowAccount;
  public final PaymentDocumentService paymentDocument;
  public final CustomerService customer;
  public final NotificationService notification;
  public final InstallmentService installment;
  public final SubscriptionService subscription;
  public final PixService pix;
  public final PixTransactionService pixTransaction;
  public final AnticipationService anticipation;
  public final RecurringPixService recurringPix;
  public final PaymentLinkService paymentLink;
  public final CheckoutService checkout;
  public final TransferService transfer;
  public final PaymentDunningService paymentDunning;
  public final BillService bill;
  public final MobilePhoneRechargeService mobilePhoneRecharge;
  public final CreditBureauReportService creditBureauReport;
  public final FinancialTransactionService financialTransaction;
  public final FinanceService finance;
  public final AccountInfoService accountInfo;
  public final InvoiceService invoice;
  public final FiscalInfoService fiscalInfo;
  public final WebhookService webhook;
  public final SubaccountService subaccount;
  public final AccountDocumentService accountDocument;
  public final ChargebackService chargeback;

  private final AsaasSdkConfig config;

  public AsaasSdk() {
    // Default configs
    this(AsaasSdkConfig.builder().build());
  }

  public AsaasSdk(AsaasSdkConfig config) {
    this.config = config;

    final OkHttpClient httpClient = new OkHttpClient.Builder()
      .addInterceptor(new DefaultHeadersInterceptor(config))
      .addInterceptor(new RetryInterceptor(config.getRetryConfig()))
      .readTimeout(config.getTimeout(), TimeUnit.MILLISECONDS)
      .build();

    this.payment = new PaymentService(httpClient, config);
    this.sandboxActions = new SandboxActionsService(httpClient, config);
    this.paymentWithSummaryData = new PaymentWithSummaryDataService(httpClient, config);
    this.creditCard = new CreditCardService(httpClient, config);
    this.paymentRefund = new PaymentRefundService(httpClient, config);
    this.paymentSplit = new PaymentSplitService(httpClient, config);
    this.escrowAccount = new EscrowAccountService(httpClient, config);
    this.paymentDocument = new PaymentDocumentService(httpClient, config);
    this.customer = new CustomerService(httpClient, config);
    this.notification = new NotificationService(httpClient, config);
    this.installment = new InstallmentService(httpClient, config);
    this.subscription = new SubscriptionService(httpClient, config);
    this.pix = new PixService(httpClient, config);
    this.pixTransaction = new PixTransactionService(httpClient, config);
    this.anticipation = new AnticipationService(httpClient, config);
    this.recurringPix = new RecurringPixService(httpClient, config);
    this.paymentLink = new PaymentLinkService(httpClient, config);
    this.checkout = new CheckoutService(httpClient, config);
    this.transfer = new TransferService(httpClient, config);
    this.paymentDunning = new PaymentDunningService(httpClient, config);
    this.bill = new BillService(httpClient, config);
    this.mobilePhoneRecharge = new MobilePhoneRechargeService(httpClient, config);
    this.creditBureauReport = new CreditBureauReportService(httpClient, config);
    this.financialTransaction = new FinancialTransactionService(httpClient, config);
    this.finance = new FinanceService(httpClient, config);
    this.accountInfo = new AccountInfoService(httpClient, config);
    this.invoice = new InvoiceService(httpClient, config);
    this.fiscalInfo = new FiscalInfoService(httpClient, config);
    this.webhook = new WebhookService(httpClient, config);
    this.subaccount = new SubaccountService(httpClient, config);
    this.accountDocument = new AccountDocumentService(httpClient, config);
    this.chargeback = new ChargebackService(httpClient, config);
  }

  public void setEnvironment(Environment environment) {
    setBaseUrl(environment.getUrl());
  }

  public void setBaseUrl(String baseUrl) {
    this.config.setBaseUrl(baseUrl);
  }

  public void setApiKey(String apiKey) {
    ApiKeyAuthConfig apiKeyAuthConfig = this.config.getApiKeyAuthConfig();
    apiKeyAuthConfig.setApiKey(apiKey);
  }

  public void setApiKeyHeader(String apiKeyHeader) {
    ApiKeyAuthConfig apiKeyAuthConfig = this.config.getApiKeyAuthConfig();
    apiKeyAuthConfig.setApiKeyHeader(apiKeyHeader);
  }
}
// c029837e0e474b76bc487506e8799df5e3335891efe4fb02bda7a1441840310c
