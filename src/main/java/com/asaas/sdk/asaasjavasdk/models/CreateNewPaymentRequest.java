// This file was generated by liblab | https://liblab.com/

package com.asaas.sdk.asaasjavasdk.models;

import java.util.List;
import lombok.Builder;
import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.NonNull;
import lombok.ToString;
import lombok.With;
import lombok.extern.jackson.Jacksonized;

@Data
@Builder
@With
@ToString
@EqualsAndHashCode
@Jacksonized
public class CreateNewPaymentRequest {

  /**
   * Unique customer identifier in Asaas
   */
  @NonNull
  private String customer;

  /**
   * Payment billing type
   */
  @NonNull
  private ApiPaymentSaveRequestBillingType billingType;

  /**
   * Payment amount
   */
  @NonNull
  private Double value;

  /**
   * Payment due date
   */
  @NonNull
  private String dueDate;

  /**
   * Payment description (max. 500 characters)
   */
  private String description;

  /**
   * Days after registration cancellation deadline (only for bank slip)
   */
  private Long daysAfterDueDateToRegistrationCancellation;

  /**
   * Free search field
   */
  private String externalReference;

  /**
   * Number of installments (only in the case of installment payment)
   */
  private Long installmentCount;

  /**
   * Enter the total amount of a charge that will be paid in installments (only in the case of an installment charge). If this field is sent, the installmentValue is not necessary, the calculation per installment will be automatic.
   */
  private Double totalValue;

  /**
   * Value of each installment (only in the case of installment payment). Send this field if you want to define the value of each installment.
   */
  private Double installmentValue;

  /**
   * Discount information
   */
  private ApiPaymentDiscountDto discount;

  /**
   * Interest information for payment after due date
   */
  private ApiPaymentInterestRequestDto interest;

  /**
   * Fine information for payment after due date
   */
  private ApiPaymentFineRequestDto fine;

  /**
   * Define whether the payment will be sent via post
   */
  private Boolean postalService;

  /**
   * Split Settings
   */
  private List<CreateNewPaymentRequestSplit> split;

  /**
   * Automatic redirection information after the payment of the link payment
   */
  private ApiPaymentCallbackRequestDto callback;
}
